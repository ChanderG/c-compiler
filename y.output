Terminals unused in grammar

   SINGLE_LINE_COMMENT
   MULTI_LINE_COMMENT
   WS
   RIGHT
   UMINUS
   UPLUS
   USTAR


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration

    5 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

    6 declaration_list_opt: declaration_list
    7                     | epsilon

    8 epsilon: /* empty */

    9 declaration_list: declaration
   10                 | declaration_list declaration

   11 statement: labeled_statement
   12          | compound_statement
   13          | expression_statement
   14          | selection_statement
   15          | iteration_statement
   16          | jump_statement

   17 labeled_statement: IDENTIFIER COLON statement
   18                  | CASE constant_expression COLON statement
   19                  | DEFAULT COLON statement

   20 compound_statement: CURLY_OPEN block_item_list CURLY_CLOSE
   21                   | CURLY_OPEN CURLY_CLOSE

   22 block_item_list: block_item
   23                | block_item_list block_item

   24 block_item: statement
   25           | declaration

   26 expression_statement: expression_opt SEMI_COLON

   27 expression_opt: epsilon
   28               | expression

   29 selection_statement: IF PARAN_OPEN expression PARAN_CLOSE statement
   30                    | IF PARAN_OPEN expression PARAN_CLOSE statement ELSE statement
   31                    | SWITCH PARAN_CLOSE expression PARAN_CLOSE statement

   32 iteration_statement: WHILE PARAN_OPEN expression PARAN_CLOSE statement
   33                    | DO statement WHILE PARAN_OPEN expression PARAN_CLOSE SEMI_COLON
   34                    | FOR PARAN_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement
   35                    | FOR PARAN_OPEN declaration SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement

   36 jump_statement: GOTO IDENTIFIER SEMI_COLON
   37               | CONTINUE SEMI_COLON
   38               | BREAK SEMI_COLON
   39               | RETURN expression_opt SEMI_COLON

   40 constant_expression: /* empty */

   41 declaration: declaration_specifiers init_declarator_list_opt SEMI_COLON

   42 declaration_specifiers_opt: declaration_specifiers
   43                           | epsilon

   44 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   45                       | type_specifier declaration_specifiers_opt
   46                       | type_qualifier declaration_specifiers_opt
   47                       | function_specifier declaration_specifiers_opt

   48 init_declarator_list_opt: epsilon
   49                         | init_declarator_list

   50 init_declarator_list: init_declarator
   51                     | init_declarator_list COMMA init_declarator

   52 init_declarator: declarator
   53                | declarator EQUAL initializer

   54 storage_class_specifier: EXTERN
   55                        | STATIC
   56                        | AUTO
   57                        | REGISTER

   58 type_specifier: VOID
   59               | CHAR
   60               | SHORT
   61               | INT
   62               | LONG
   63               | FLOAT
   64               | DOUBLE
   65               | SIGNED
   66               | UNSIGNED
   67               | _BOOL
   68               | _COMPLEX
   69               | _IMAGINARY
   70               | enum_specifier

   71 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
   72                         | type_qualifier specifier_qualifier_list_opt

   73 specifier_qualifier_list_opt: epsilon
   74                             | specifier_qualifier_list

   75 enum_specifier: ENUM identifier_opt CURLY_CLOSE
   76               | ENUM identifier_opt_w_comma CURLY_CLOSE
   77               | ENUM IDENTIFIER

   78 identifier_opt: IDENTIFIER CURLY_OPEN enumerator_list
   79               | epsilon CURLY_OPEN enumerator_list

   80 identifier_opt_w_comma: IDENTIFIER CURLY_OPEN enumerator_list COMMA
   81                       | epsilon CURLY_OPEN enumerator_list COMMA

   82 enumerator_list: enumerator
   83                | enumerator_list COMMA enumerator

   84 enumerator: enumeration_constant
   85           | enumeration_constant EQUAL constant_expression

   86 enumeration_constant: IDENTIFIER

   87 type_qualifier: CONST
   88               | RESTRICT
   89               | VOLATILE

   90 function_specifier: INLINE

   91 declarator: pointer_opt direct_declarator

   92 pointer_opt: epsilon
   93            | pointer

   94 direct_declarator: IDENTIFIER
   95                  | PARAN_OPEN declarator PARAN_CLOSE
   96                  | direct_declarator SQ_OPEN type_qualifier_list_opt assignment_expression_opt SQ_CLOSE
   97                  | direct_declarator SQ_OPEN STATIC type_qualifier_list_opt assignment_expression SQ_CLOSE
   98                  | direct_declarator SQ_OPEN type_qualifier_list STATIC assignment_expression SQ_CLOSE
   99                  | direct_declarator SQ_OPEN type_qualifier_list_opt STAR SQ_CLOSE
  100                  | direct_declarator PARAN_OPEN param_or_identi PARAN_CLOSE

  101 param_or_identi: parameter_type_list
  102                | identifier_list_opt

  103 type_qualifier_list_opt: epsilon
  104                        | type_qualifier_list

  105 assignment_expression_opt: epsilon
  106                          | assignment_expression

  107 identifier_list_opt: epsilon
  108                    | identifier_list

  109 pointer: STAR type_qualifier_list_opt pointer_opt

  110 type_qualifier_list: type_qualifier
  111                    | type_qualifier_list type_qualifier

  112 parameter_type_list: parameter_list
  113                    | parameter_list COMMA ELIPSIS

  114 parameter_list: parameter_declaration
  115               | parameter_list COMMA parameter_declaration

  116 parameter_declaration: declaration_specifiers declarator
  117                      | declaration_specifiers

  118 identifier_list: IDENTIFIER
  119                | identifier_list COMMA IDENTIFIER

  120 type_name: specifier_qualifier_list

  121 initializer: assignment_expression
  122            | CURLY_OPEN initializer_list CURLY_CLOSE
  123            | CURLY_OPEN initializer_list COMMA CURLY_CLOSE

  124 initializer_list: designation_opt initializer
  125                 | initializer_list COMMA designation_opt initializer

  126 designation_opt: epsilon
  127                | designation

  128 designation: designator_list EQUAL

  129 designator_list: designator
  130                | designator_list designator

  131 designator: SQ_OPEN constant_expression SQ_CLOSE
  132           | DOT IDENTIFIER

  133 primary_expression: IDENTIFIER
  134                   | constant
  135                   | STRING_LITERAL
  136                   | PARAN_OPEN expression PARAN_CLOSE

  137 constant: INTEGER_CONSTANT
  138         | FLOATING_CONSTANT
  139         | CHARACTER_CONSTANT

  140 postfix_expression: primary_expression
  141                   | postfix_expression SQ_OPEN expression SQ_CLOSE
  142                   | postfix_expression PARAN_OPEN argument_expression_list_opt PARAN_CLOSE
  143                   | postfix_expression DOT IDENTIFIER
  144                   | postfix_expression DEREF IDENTIFIER
  145                   | postfix_expression INC
  146                   | postfix_expression DEC
  147                   | PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE
  148                   | PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE

  149 argument_expression_list_opt: epsilon
  150                             | argument_expression_list

  151 argument_expression_list: assignment_expression
  152                         | argument_expression_list COMMA assignment_expression

  153 unary_expression: postfix_expression
  154                 | INC unary_expression
  155                 | DEC unary_expression
  156                 | unary_operator cast_expression
  157                 | SIZEOF unary_expression
  158                 | SIZEOF PARAN_OPEN type_name PARAN_CLOSE

  159 unary_operator: AND
  160               | STAR
  161               | PLUS
  162               | MINUS
  163               | TILDE
  164               | EX

  165 cast_expression: unary_expression
  166                | PARAN_OPEN type_name PARAN_CLOSE cast_expression

  167 multiplicative_expression: cast_expression
  168                          | multiplicative_expression STAR cast_expression
  169                          | multiplicative_expression BY cast_expression
  170                          | multiplicative_expression MOD cast_expression

  171 additive_expression: multiplicative_expression
  172                    | additive_expression PLUS multiplicative_expression
  173                    | additive_expression MINUS multiplicative_expression

  174 shift_expression: additive_expression
  175                 | shift_expression SL additive_expression
  176                 | shift_expression SR additive_expression

  177 relational_expression: shift_expression
  178                      | relational_expression LT shift_expression
  179                      | relational_expression GT shift_expression
  180                      | relational_expression LTE shift_expression
  181                      | relational_expression GTE shift_expression

  182 equality_expression: relational_expression
  183                    | equality_expression E relational_expression
  184                    | equality_expression NE relational_expression

  185 and_expression: equality_expression
  186               | and_expression AND equality_expression

  187 exclusive_or_expression: and_expression
  188                        | exclusive_or_expression CAP equality_expression

  189 inclusive_or_expression: exclusive_or_expression
  190                        | inclusive_or_expression OR exclusive_or_expression

  191 logical_and_expression: inclusive_or_expression
  192                       | logical_and_expression ANDAND inclusive_or_expression

  193 logical_or_expression: logical_and_expression
  194                      | logical_or_expression OROR logical_and_expression

  195 conditional_expression: logical_or_expression
  196                       | logical_or_expression Q expression COLON conditional_expression

  197 assignment_expression: conditional_expression
  198                      | unary_expression assignment_operator assignment_expression

  199 assignment_operator: EQUAL
  200                    | STAREQUAL
  201                    | BYEQUAL
  202                    | MODEQUAL
  203                    | PLUSEQUAL
  204                    | MINUSEQUAL
  205                    | SLEQUAL
  206                    | SREQUAL
  207                    | ANDEQUAL
  208                    | CAPEQUAL
  209                    | OREQUAL

  210 expression: assignment_expression
  211           | expression COMMA assignment_expression

  212 constant_expression: conditional_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 17 36 77 78 80 86 94 118 119 132 133 143 144
INTEGER_CONSTANT (259) 137
FLOATING_CONSTANT (260) 138
CHARACTER_CONSTANT (261) 139
STRING_LITERAL (262) 135
SINGLE_LINE_COMMENT (263)
MULTI_LINE_COMMENT (264)
WS (265)
COLON (266) 17 18 19 196
SEMI_COLON (267) 26 33 34 35 36 37 38 39 41
CASE (268) 18
DEFAULT (269) 19
CURLY_OPEN (270) 20 21 78 79 80 81 122 123 147 148
CURLY_CLOSE (271) 20 21 75 76 122 123 147 148
PARAN_OPEN (272) 29 30 32 33 34 35 95 100 136 142 147 148 158 166
PARAN_CLOSE (273) 29 30 31 32 33 34 35 95 100 136 142 147 148 158 166
SQ_OPEN (274) 96 97 98 99 131 141
SQ_CLOSE (275) 96 97 98 99 131 141
IF (276) 29 30
ELSE (277) 30
SWITCH (278) 31
FOR (279) 34 35
WHILE (280) 32 33
DO (281) 33
GOTO (282) 36
CONTINUE (283) 37
BREAK (284) 38
RETURN (285) 39
COMMA (286) 51 80 81 83 113 115 119 123 125 148 152 211
EQUAL (287) 53 85 128 199
EXTERN (288) 54
STATIC (289) 55 97 98
AUTO (290) 56
REGISTER (291) 57
VOID (292) 58
CHAR (293) 59
SHORT (294) 60
INT (295) 61
LONG (296) 62
FLOAT (297) 63
DOUBLE (298) 64
SIGNED (299) 65
UNSIGNED (300) 66
_BOOL (301) 67
_COMPLEX (302) 68
_IMAGINARY (303) 69
ENUM (304) 75 76 77
CONST (305) 87
RESTRICT (306) 88
VOLATILE (307) 89
INLINE (308) 90
STAR (309) 99 109 160 168
ELIPSIS (310) 113
DOT (311) 132 143
DEREF (312) 144
INC (313) 145 154
DEC (314) 146 155
SIZEOF (315) 157 158
PLUS (316) 161 172
MINUS (317) 162 173
TILDE (318) 163
EX (319) 164
AND (320) 159 186
OR (321) 190
BY (322) 169
MOD (323) 170
SL (324) 175
SR (325) 176
LT (326) 178
GT (327) 179
LTE (328) 180
GTE (329) 181
E (330) 183
NE (331) 184
CAP (332) 188
Q (333) 196
ANDAND (334) 192
OROR (335) 194
STAREQUAL (336) 200
BYEQUAL (337) 201
MODEQUAL (338) 202
PLUSEQUAL (339) 203
MINUSEQUAL (340) 204
SLEQUAL (341) 205
SREQUAL (342) 206
ANDEQUAL (343) 207
CAPEQUAL (344) 208
OREQUAL (345) 209
LOWER_THAN_ELSE (346)
RIGHT (347)
UMINUS (348)
UPLUS (349)
USTAR (350)
U (351)


Nonterminals, with rules where they appear

$accept (97)
    on left: 0
translation_unit (98)
    on left: 1 2, on right: 0 2
external_declaration (99)
    on left: 3 4, on right: 1 2
function_definition (100)
    on left: 5, on right: 3
declaration_list_opt (101)
    on left: 6 7, on right: 5
epsilon (102)
    on left: 8, on right: 7 27 43 48 73 79 81 92 103 105 107 126 149
declaration_list (103)
    on left: 9 10, on right: 6 10
statement (104)
    on left: 11 12 13 14 15 16, on right: 17 18 19 24 29 30 31 32 33
    34 35
labeled_statement (105)
    on left: 17 18 19, on right: 11
compound_statement (106)
    on left: 20 21, on right: 5 12
block_item_list (107)
    on left: 22 23, on right: 20 23
block_item (108)
    on left: 24 25, on right: 22 23
expression_statement (109)
    on left: 26, on right: 13
expression_opt (110)
    on left: 27 28, on right: 26 34 35 39
selection_statement (111)
    on left: 29 30 31, on right: 14
iteration_statement (112)
    on left: 32 33 34 35, on right: 15
jump_statement (113)
    on left: 36 37 38 39, on right: 16
constant_expression (114)
    on left: 40 212, on right: 18 85 131
declaration (115)
    on left: 41, on right: 4 9 10 25 35
declaration_specifiers_opt (116)
    on left: 42 43, on right: 44 45 46 47
declaration_specifiers (117)
    on left: 44 45 46 47, on right: 5 41 42 116 117
init_declarator_list_opt (118)
    on left: 48 49, on right: 41
init_declarator_list (119)
    on left: 50 51, on right: 49 51
init_declarator (120)
    on left: 52 53, on right: 50 51
storage_class_specifier (121)
    on left: 54 55 56 57, on right: 44
type_specifier (122)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70, on right: 45 71
specifier_qualifier_list (123)
    on left: 71 72, on right: 74 120
specifier_qualifier_list_opt (124)
    on left: 73 74, on right: 71 72
enum_specifier (125)
    on left: 75 76 77, on right: 70
identifier_opt (126)
    on left: 78 79, on right: 75
identifier_opt_w_comma (127)
    on left: 80 81, on right: 76
enumerator_list (128)
    on left: 82 83, on right: 78 79 80 81 83
enumerator (129)
    on left: 84 85, on right: 82 83
enumeration_constant (130)
    on left: 86, on right: 84 85
type_qualifier (131)
    on left: 87 88 89, on right: 46 72 110 111
function_specifier (132)
    on left: 90, on right: 47
declarator (133)
    on left: 91, on right: 5 52 53 95 116
pointer_opt (134)
    on left: 92 93, on right: 91 109
direct_declarator (135)
    on left: 94 95 96 97 98 99 100, on right: 91 96 97 98 99 100
param_or_identi (136)
    on left: 101 102, on right: 100
type_qualifier_list_opt (137)
    on left: 103 104, on right: 96 97 99 109
assignment_expression_opt (138)
    on left: 105 106, on right: 96
identifier_list_opt (139)
    on left: 107 108, on right: 102
pointer (140)
    on left: 109, on right: 93
type_qualifier_list (141)
    on left: 110 111, on right: 98 104 111
parameter_type_list (142)
    on left: 112 113, on right: 101
parameter_list (143)
    on left: 114 115, on right: 112 113 115
parameter_declaration (144)
    on left: 116 117, on right: 114 115
identifier_list (145)
    on left: 118 119, on right: 108 119
type_name (146)
    on left: 120, on right: 147 148 158 166
initializer (147)
    on left: 121 122 123, on right: 53 124 125
initializer_list (148)
    on left: 124 125, on right: 122 123 125 147 148
designation_opt (149)
    on left: 126 127, on right: 124 125
designation (150)
    on left: 128, on right: 127
designator_list (151)
    on left: 129 130, on right: 128 130
designator (152)
    on left: 131 132, on right: 129 130
primary_expression (153)
    on left: 133 134 135 136, on right: 140
constant (154)
    on left: 137 138 139, on right: 134
postfix_expression (155)
    on left: 140 141 142 143 144 145 146 147 148, on right: 141 142
    143 144 145 146 153
argument_expression_list_opt (156)
    on left: 149 150, on right: 142
argument_expression_list (157)
    on left: 151 152, on right: 150 152
unary_expression (158)
    on left: 153 154 155 156 157 158, on right: 154 155 157 165 198
unary_operator (159)
    on left: 159 160 161 162 163 164, on right: 156
cast_expression (160)
    on left: 165 166, on right: 156 166 167 168 169 170
multiplicative_expression (161)
    on left: 167 168 169 170, on right: 168 169 170 171 172 173
additive_expression (162)
    on left: 171 172 173, on right: 172 173 174 175 176
shift_expression (163)
    on left: 174 175 176, on right: 175 176 177 178 179 180 181
relational_expression (164)
    on left: 177 178 179 180 181, on right: 178 179 180 181 182 183
    184
equality_expression (165)
    on left: 182 183 184, on right: 183 184 185 186 188
and_expression (166)
    on left: 185 186, on right: 186 187
exclusive_or_expression (167)
    on left: 187 188, on right: 188 189 190
inclusive_or_expression (168)
    on left: 189 190, on right: 190 191 192
logical_and_expression (169)
    on left: 191 192, on right: 192 193 194
logical_or_expression (170)
    on left: 193 194, on right: 194 195 196
conditional_expression (171)
    on left: 195 196, on right: 196 197 212
assignment_expression (172)
    on left: 197 198, on right: 97 98 106 121 151 152 198 210 211
assignment_operator (173)
    on left: 199 200 201 202 203 204 205 206 207 208 209, on right:
    198
expression (174)
    on left: 210 211, on right: 28 29 30 31 32 33 136 141 196 211


state 0

    0 $accept: . translation_unit $end

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    translation_unit         go to state 22
    external_declaration     go to state 23
    function_definition      go to state 24
    declaration              go to state 25
    declaration_specifiers   go to state 26
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


state 1

   54 storage_class_specifier: EXTERN .

    $default  reduce using rule 54 (storage_class_specifier)


state 2

   55 storage_class_specifier: STATIC .

    $default  reduce using rule 55 (storage_class_specifier)


state 3

   56 storage_class_specifier: AUTO .

    $default  reduce using rule 56 (storage_class_specifier)


state 4

   57 storage_class_specifier: REGISTER .

    $default  reduce using rule 57 (storage_class_specifier)


state 5

   58 type_specifier: VOID .

    $default  reduce using rule 58 (type_specifier)


state 6

   59 type_specifier: CHAR .

    $default  reduce using rule 59 (type_specifier)


state 7

   60 type_specifier: SHORT .

    $default  reduce using rule 60 (type_specifier)


state 8

   61 type_specifier: INT .

    $default  reduce using rule 61 (type_specifier)


state 9

   62 type_specifier: LONG .

    $default  reduce using rule 62 (type_specifier)


state 10

   63 type_specifier: FLOAT .

    $default  reduce using rule 63 (type_specifier)


state 11

   64 type_specifier: DOUBLE .

    $default  reduce using rule 64 (type_specifier)


state 12

   65 type_specifier: SIGNED .

    $default  reduce using rule 65 (type_specifier)


state 13

   66 type_specifier: UNSIGNED .

    $default  reduce using rule 66 (type_specifier)


state 14

   67 type_specifier: _BOOL .

    $default  reduce using rule 67 (type_specifier)


state 15

   68 type_specifier: _COMPLEX .

    $default  reduce using rule 68 (type_specifier)


state 16

   69 type_specifier: _IMAGINARY .

    $default  reduce using rule 69 (type_specifier)


state 17

   75 enum_specifier: ENUM . identifier_opt CURLY_CLOSE
   76               | ENUM . identifier_opt_w_comma CURLY_CLOSE
   77               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 8 (epsilon)

    epsilon                 go to state 33
    identifier_opt          go to state 34
    identifier_opt_w_comma  go to state 35


state 18

   87 type_qualifier: CONST .

    $default  reduce using rule 87 (type_qualifier)


state 19

   88 type_qualifier: RESTRICT .

    $default  reduce using rule 88 (type_qualifier)


state 20

   89 type_qualifier: VOLATILE .

    $default  reduce using rule 89 (type_qualifier)


state 21

   90 function_specifier: INLINE .

    $default  reduce using rule 90 (function_specifier)


state 22

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 36
    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    external_declaration     go to state 37
    function_definition      go to state 24
    declaration              go to state 25
    declaration_specifiers   go to state 26
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


state 23

    1 translation_unit: external_declaration .

    $default  reduce using rule 1 (translation_unit)


state 24

    3 external_declaration: function_definition .

    $default  reduce using rule 3 (external_declaration)


state 25

    4 external_declaration: declaration .

    $default  reduce using rule 4 (external_declaration)


state 26

    5 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement
   41 declaration: declaration_specifiers . init_declarator_list_opt SEMI_COLON

    STAR  shift, and go to state 38

    $default  reduce using rule 8 (epsilon)

    epsilon                   go to state 39
    init_declarator_list_opt  go to state 40
    init_declarator_list      go to state 41
    init_declarator           go to state 42
    declarator                go to state 43
    pointer_opt               go to state 44
    pointer                   go to state 45


state 27

   44 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    $default  reduce using rule 8 (epsilon)

    epsilon                     go to state 46
    declaration_specifiers_opt  go to state 47
    declaration_specifiers      go to state 48
    storage_class_specifier     go to state 27
    type_specifier              go to state 28
    enum_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31


state 28

   45 declaration_specifiers: type_specifier . declaration_specifiers_opt

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    $default  reduce using rule 8 (epsilon)

    epsilon                     go to state 46
    declaration_specifiers_opt  go to state 49
    declaration_specifiers      go to state 48
    storage_class_specifier     go to state 27
    type_specifier              go to state 28
    enum_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31


state 29

   70 type_specifier: enum_specifier .

    $default  reduce using rule 70 (type_specifier)


state 30

   46 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    $default  reduce using rule 8 (epsilon)

    epsilon                     go to state 46
    declaration_specifiers_opt  go to state 50
    declaration_specifiers      go to state 48
    storage_class_specifier     go to state 27
    type_specifier              go to state 28
    enum_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31


state 31

   47 declaration_specifiers: function_specifier . declaration_specifiers_opt

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    $default  reduce using rule 8 (epsilon)

    epsilon                     go to state 46
    declaration_specifiers_opt  go to state 51
    declaration_specifiers      go to state 48
    storage_class_specifier     go to state 27
    type_specifier              go to state 28
    enum_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31


state 32

   77 enum_specifier: ENUM IDENTIFIER .
   78 identifier_opt: IDENTIFIER . CURLY_OPEN enumerator_list
   80 identifier_opt_w_comma: IDENTIFIER . CURLY_OPEN enumerator_list COMMA

    CURLY_OPEN  shift, and go to state 52

    $default  reduce using rule 77 (enum_specifier)


state 33

   79 identifier_opt: epsilon . CURLY_OPEN enumerator_list
   81 identifier_opt_w_comma: epsilon . CURLY_OPEN enumerator_list COMMA

    CURLY_OPEN  shift, and go to state 53


state 34

   75 enum_specifier: ENUM identifier_opt . CURLY_CLOSE

    CURLY_CLOSE  shift, and go to state 54


state 35

   76 enum_specifier: ENUM identifier_opt_w_comma . CURLY_CLOSE

    CURLY_CLOSE  shift, and go to state 55


state 36

    0 $accept: translation_unit $end .

    $default  accept


state 37

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 38

  109 pointer: STAR . type_qualifier_list_opt pointer_opt

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 8 (epsilon)

    epsilon                  go to state 56
    type_qualifier           go to state 57
    type_qualifier_list_opt  go to state 58
    type_qualifier_list      go to state 59


state 39

   48 init_declarator_list_opt: epsilon .
   92 pointer_opt: epsilon .

    SEMI_COLON  reduce using rule 48 (init_declarator_list_opt)
    $default    reduce using rule 92 (pointer_opt)


state 40

   41 declaration: declaration_specifiers init_declarator_list_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 60


state 41

   49 init_declarator_list_opt: init_declarator_list .
   51 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA  shift, and go to state 61

    $default  reduce using rule 49 (init_declarator_list_opt)


state 42

   50 init_declarator_list: init_declarator .

    $default  reduce using rule 50 (init_declarator_list)


state 43

    5 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement
   52 init_declarator: declarator .
   53                | declarator . EQUAL initializer

    EQUAL       shift, and go to state 62
    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    CURLY_OPEN  reduce using rule 8 (epsilon)
    $default    reduce using rule 52 (init_declarator)

    declaration_list_opt     go to state 63
    epsilon                  go to state 64
    declaration_list         go to state 65
    declaration              go to state 66
    declaration_specifiers   go to state 67
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


state 44

   91 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 68
    PARAN_OPEN  shift, and go to state 69

    direct_declarator  go to state 70


state 45

   93 pointer_opt: pointer .

    $default  reduce using rule 93 (pointer_opt)


state 46

   43 declaration_specifiers_opt: epsilon .

    $default  reduce using rule 43 (declaration_specifiers_opt)


state 47

   44 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 44 (declaration_specifiers)


state 48

   42 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 42 (declaration_specifiers_opt)


state 49

   45 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 45 (declaration_specifiers)


state 50

   46 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 46 (declaration_specifiers)


state 51

   47 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 47 (declaration_specifiers)


state 52

   78 identifier_opt: IDENTIFIER CURLY_OPEN . enumerator_list
   80 identifier_opt_w_comma: IDENTIFIER CURLY_OPEN . enumerator_list COMMA

    IDENTIFIER  shift, and go to state 71

    enumerator_list       go to state 72
    enumerator            go to state 73
    enumeration_constant  go to state 74


state 53

   79 identifier_opt: epsilon CURLY_OPEN . enumerator_list
   81 identifier_opt_w_comma: epsilon CURLY_OPEN . enumerator_list COMMA

    IDENTIFIER  shift, and go to state 71

    enumerator_list       go to state 75
    enumerator            go to state 73
    enumeration_constant  go to state 74


state 54

   75 enum_specifier: ENUM identifier_opt CURLY_CLOSE .

    $default  reduce using rule 75 (enum_specifier)


state 55

   76 enum_specifier: ENUM identifier_opt_w_comma CURLY_CLOSE .

    $default  reduce using rule 76 (enum_specifier)


state 56

  103 type_qualifier_list_opt: epsilon .

    $default  reduce using rule 103 (type_qualifier_list_opt)


state 57

  110 type_qualifier_list: type_qualifier .

    $default  reduce using rule 110 (type_qualifier_list)


state 58

  109 pointer: STAR type_qualifier_list_opt . pointer_opt

    STAR  shift, and go to state 38

    $default  reduce using rule 8 (epsilon)

    epsilon      go to state 76
    pointer_opt  go to state 77
    pointer      go to state 45


state 59

  104 type_qualifier_list_opt: type_qualifier_list .
  111 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 104 (type_qualifier_list_opt)

    type_qualifier  go to state 78


state 60

   41 declaration: declaration_specifiers init_declarator_list_opt SEMI_COLON .

    $default  reduce using rule 41 (declaration)


state 61

   51 init_declarator_list: init_declarator_list COMMA . init_declarator

    STAR  shift, and go to state 38

    $default  reduce using rule 8 (epsilon)

    epsilon          go to state 76
    init_declarator  go to state 79
    declarator       go to state 80
    pointer_opt      go to state 44
    pointer          go to state 45


state 62

   53 init_declarator: declarator EQUAL . initializer

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CURLY_OPEN          shift, and go to state 86
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    initializer                go to state 97
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 115


state 63

    5 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement

    CURLY_OPEN  shift, and go to state 116

    compound_statement  go to state 117


state 64

    7 declaration_list_opt: epsilon .

    $default  reduce using rule 7 (declaration_list_opt)


state 65

    6 declaration_list_opt: declaration_list .
   10 declaration_list: declaration_list . declaration

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    $default  reduce using rule 6 (declaration_list_opt)

    declaration              go to state 118
    declaration_specifiers   go to state 67
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


state 66

    9 declaration_list: declaration .

    $default  reduce using rule 9 (declaration_list)


state 67

   41 declaration: declaration_specifiers . init_declarator_list_opt SEMI_COLON

    STAR  shift, and go to state 38

    $default  reduce using rule 8 (epsilon)

    epsilon                   go to state 39
    init_declarator_list_opt  go to state 40
    init_declarator_list      go to state 41
    init_declarator           go to state 42
    declarator                go to state 80
    pointer_opt               go to state 44
    pointer                   go to state 45


state 68

   94 direct_declarator: IDENTIFIER .

    $default  reduce using rule 94 (direct_declarator)


state 69

   95 direct_declarator: PARAN_OPEN . declarator PARAN_CLOSE

    STAR  shift, and go to state 38

    $default  reduce using rule 8 (epsilon)

    epsilon      go to state 76
    declarator   go to state 119
    pointer_opt  go to state 44
    pointer      go to state 45


state 70

   91 declarator: pointer_opt direct_declarator .
   96 direct_declarator: direct_declarator . SQ_OPEN type_qualifier_list_opt assignment_expression_opt SQ_CLOSE
   97                  | direct_declarator . SQ_OPEN STATIC type_qualifier_list_opt assignment_expression SQ_CLOSE
   98                  | direct_declarator . SQ_OPEN type_qualifier_list STATIC assignment_expression SQ_CLOSE
   99                  | direct_declarator . SQ_OPEN type_qualifier_list_opt STAR SQ_CLOSE
  100                  | direct_declarator . PARAN_OPEN param_or_identi PARAN_CLOSE

    PARAN_OPEN  shift, and go to state 120
    SQ_OPEN     shift, and go to state 121

    $default  reduce using rule 91 (declarator)


state 71

   86 enumeration_constant: IDENTIFIER .

    $default  reduce using rule 86 (enumeration_constant)


state 72

   78 identifier_opt: IDENTIFIER CURLY_OPEN enumerator_list .
   80 identifier_opt_w_comma: IDENTIFIER CURLY_OPEN enumerator_list . COMMA
   83 enumerator_list: enumerator_list . COMMA enumerator

    COMMA  shift, and go to state 122

    $default  reduce using rule 78 (identifier_opt)


state 73

   82 enumerator_list: enumerator .

    $default  reduce using rule 82 (enumerator_list)


state 74

   84 enumerator: enumeration_constant .
   85           | enumeration_constant . EQUAL constant_expression

    EQUAL  shift, and go to state 123

    $default  reduce using rule 84 (enumerator)


state 75

   79 identifier_opt: epsilon CURLY_OPEN enumerator_list .
   81 identifier_opt_w_comma: epsilon CURLY_OPEN enumerator_list . COMMA
   83 enumerator_list: enumerator_list . COMMA enumerator

    COMMA  shift, and go to state 124

    $default  reduce using rule 79 (identifier_opt)


state 76

   92 pointer_opt: epsilon .

    $default  reduce using rule 92 (pointer_opt)


state 77

  109 pointer: STAR type_qualifier_list_opt pointer_opt .

    $default  reduce using rule 109 (pointer)


state 78

  111 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 111 (type_qualifier_list)


state 79

   51 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 51 (init_declarator_list)


state 80

   52 init_declarator: declarator .
   53                | declarator . EQUAL initializer

    EQUAL  shift, and go to state 62

    $default  reduce using rule 52 (init_declarator)


state 81

  133 primary_expression: IDENTIFIER .

    $default  reduce using rule 133 (primary_expression)


state 82

  137 constant: INTEGER_CONSTANT .

    $default  reduce using rule 137 (constant)


state 83

  138 constant: FLOATING_CONSTANT .

    $default  reduce using rule 138 (constant)


state 84

  139 constant: CHARACTER_CONSTANT .

    $default  reduce using rule 139 (constant)


state 85

  135 primary_expression: STRING_LITERAL .

    $default  reduce using rule 135 (primary_expression)


state 86

  122 initializer: CURLY_OPEN . initializer_list CURLY_CLOSE
  123            | CURLY_OPEN . initializer_list COMMA CURLY_CLOSE

    SQ_OPEN  shift, and go to state 125
    DOT      shift, and go to state 126

    $default  reduce using rule 8 (epsilon)

    epsilon           go to state 127
    initializer_list  go to state 128
    designation_opt   go to state 129
    designation       go to state 130
    designator_list   go to state 131
    designator        go to state 132


state 87

  136 primary_expression: PARAN_OPEN . expression PARAN_CLOSE
  147 postfix_expression: PARAN_OPEN . type_name PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE
  148                   | PARAN_OPEN . type_name PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE
  166 cast_expression: PARAN_OPEN . type_name PARAN_CLOSE cast_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    VOID                shift, and go to state 5
    CHAR                shift, and go to state 6
    SHORT               shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    FLOAT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    SIGNED              shift, and go to state 12
    UNSIGNED            shift, and go to state 13
    _BOOL               shift, and go to state 14
    _COMPLEX            shift, and go to state 15
    _IMAGINARY          shift, and go to state 16
    ENUM                shift, and go to state 17
    CONST               shift, and go to state 18
    RESTRICT            shift, and go to state 19
    VOLATILE            shift, and go to state 20
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    type_specifier             go to state 133
    specifier_qualifier_list   go to state 134
    enum_specifier             go to state 29
    type_qualifier             go to state 135
    type_name                  go to state 136
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 138


state 88

  160 unary_operator: STAR .

    $default  reduce using rule 160 (unary_operator)


state 89

  154 unary_expression: INC . unary_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 139
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression  go to state 98
    constant            go to state 99
    postfix_expression  go to state 100
    unary_expression    go to state 140
    unary_operator      go to state 102


state 90

  155 unary_expression: DEC . unary_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 139
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression  go to state 98
    constant            go to state 99
    postfix_expression  go to state 100
    unary_expression    go to state 141
    unary_operator      go to state 102


state 91

  157 unary_expression: SIZEOF . unary_expression
  158                 | SIZEOF . PARAN_OPEN type_name PARAN_CLOSE

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 142
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression  go to state 98
    constant            go to state 99
    postfix_expression  go to state 100
    unary_expression    go to state 143
    unary_operator      go to state 102


state 92

  161 unary_operator: PLUS .

    $default  reduce using rule 161 (unary_operator)


state 93

  162 unary_operator: MINUS .

    $default  reduce using rule 162 (unary_operator)


state 94

  163 unary_operator: TILDE .

    $default  reduce using rule 163 (unary_operator)


state 95

  164 unary_operator: EX .

    $default  reduce using rule 164 (unary_operator)


state 96

  159 unary_operator: AND .

    $default  reduce using rule 159 (unary_operator)


state 97

   53 init_declarator: declarator EQUAL initializer .

    $default  reduce using rule 53 (init_declarator)


state 98

  140 postfix_expression: primary_expression .

    $default  reduce using rule 140 (postfix_expression)


state 99

  134 primary_expression: constant .

    $default  reduce using rule 134 (primary_expression)


state 100

  141 postfix_expression: postfix_expression . SQ_OPEN expression SQ_CLOSE
  142                   | postfix_expression . PARAN_OPEN argument_expression_list_opt PARAN_CLOSE
  143                   | postfix_expression . DOT IDENTIFIER
  144                   | postfix_expression . DEREF IDENTIFIER
  145                   | postfix_expression . INC
  146                   | postfix_expression . DEC
  153 unary_expression: postfix_expression .

    PARAN_OPEN  shift, and go to state 144
    SQ_OPEN     shift, and go to state 145
    DOT         shift, and go to state 146
    DEREF       shift, and go to state 147
    INC         shift, and go to state 148
    DEC         shift, and go to state 149

    $default  reduce using rule 153 (unary_expression)


state 101

  165 cast_expression: unary_expression .
  198 assignment_expression: unary_expression . assignment_operator assignment_expression

    EQUAL       shift, and go to state 150
    STAREQUAL   shift, and go to state 151
    BYEQUAL     shift, and go to state 152
    MODEQUAL    shift, and go to state 153
    PLUSEQUAL   shift, and go to state 154
    MINUSEQUAL  shift, and go to state 155
    SLEQUAL     shift, and go to state 156
    SREQUAL     shift, and go to state 157
    ANDEQUAL    shift, and go to state 158
    CAPEQUAL    shift, and go to state 159
    OREQUAL     shift, and go to state 160

    $default  reduce using rule 165 (cast_expression)

    assignment_operator  go to state 161


state 102

  156 unary_expression: unary_operator . cast_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression  go to state 98
    constant            go to state 99
    postfix_expression  go to state 100
    unary_expression    go to state 162
    unary_operator      go to state 102
    cast_expression     go to state 163


state 103

  167 multiplicative_expression: cast_expression .

    $default  reduce using rule 167 (multiplicative_expression)


state 104

  168 multiplicative_expression: multiplicative_expression . STAR cast_expression
  169                          | multiplicative_expression . BY cast_expression
  170                          | multiplicative_expression . MOD cast_expression
  171 additive_expression: multiplicative_expression .

    STAR  shift, and go to state 164
    BY    shift, and go to state 165
    MOD   shift, and go to state 166

    $default  reduce using rule 171 (additive_expression)


state 105

  172 additive_expression: additive_expression . PLUS multiplicative_expression
  173                    | additive_expression . MINUS multiplicative_expression
  174 shift_expression: additive_expression .

    PLUS   shift, and go to state 167
    MINUS  shift, and go to state 168

    $default  reduce using rule 174 (shift_expression)


state 106

  175 shift_expression: shift_expression . SL additive_expression
  176                 | shift_expression . SR additive_expression
  177 relational_expression: shift_expression .

    SL  shift, and go to state 169
    SR  shift, and go to state 170

    $default  reduce using rule 177 (relational_expression)


state 107

  178 relational_expression: relational_expression . LT shift_expression
  179                      | relational_expression . GT shift_expression
  180                      | relational_expression . LTE shift_expression
  181                      | relational_expression . GTE shift_expression
  182 equality_expression: relational_expression .

    LT   shift, and go to state 171
    GT   shift, and go to state 172
    LTE  shift, and go to state 173
    GTE  shift, and go to state 174

    $default  reduce using rule 182 (equality_expression)


state 108

  183 equality_expression: equality_expression . E relational_expression
  184                    | equality_expression . NE relational_expression
  185 and_expression: equality_expression .

    E   shift, and go to state 175
    NE  shift, and go to state 176

    $default  reduce using rule 185 (and_expression)


state 109

  186 and_expression: and_expression . AND equality_expression
  187 exclusive_or_expression: and_expression .

    AND  shift, and go to state 177

    $default  reduce using rule 187 (exclusive_or_expression)


state 110

  188 exclusive_or_expression: exclusive_or_expression . CAP equality_expression
  189 inclusive_or_expression: exclusive_or_expression .

    CAP  shift, and go to state 178

    $default  reduce using rule 189 (inclusive_or_expression)


state 111

  190 inclusive_or_expression: inclusive_or_expression . OR exclusive_or_expression
  191 logical_and_expression: inclusive_or_expression .

    OR  shift, and go to state 179

    $default  reduce using rule 191 (logical_and_expression)


state 112

  192 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  193 logical_or_expression: logical_and_expression .

    ANDAND  shift, and go to state 180

    $default  reduce using rule 193 (logical_or_expression)


state 113

  194 logical_or_expression: logical_or_expression . OROR logical_and_expression
  195 conditional_expression: logical_or_expression .
  196                       | logical_or_expression . Q expression COLON conditional_expression

    Q     shift, and go to state 181
    OROR  shift, and go to state 182

    $default  reduce using rule 195 (conditional_expression)


state 114

  197 assignment_expression: conditional_expression .

    $default  reduce using rule 197 (assignment_expression)


state 115

  121 initializer: assignment_expression .

    $default  reduce using rule 121 (initializer)


state 116

   20 compound_statement: CURLY_OPEN . block_item_list CURLY_CLOSE
   21                   | CURLY_OPEN . CURLY_CLOSE

    IDENTIFIER          shift, and go to state 183
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CASE                shift, and go to state 184
    DEFAULT             shift, and go to state 185
    CURLY_OPEN          shift, and go to state 116
    CURLY_CLOSE         shift, and go to state 186
    PARAN_OPEN          shift, and go to state 87
    IF                  shift, and go to state 187
    SWITCH              shift, and go to state 188
    FOR                 shift, and go to state 189
    WHILE               shift, and go to state 190
    DO                  shift, and go to state 191
    GOTO                shift, and go to state 192
    CONTINUE            shift, and go to state 193
    BREAK               shift, and go to state 194
    RETURN              shift, and go to state 195
    EXTERN              shift, and go to state 1
    STATIC              shift, and go to state 2
    AUTO                shift, and go to state 3
    REGISTER            shift, and go to state 4
    VOID                shift, and go to state 5
    CHAR                shift, and go to state 6
    SHORT               shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    FLOAT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    SIGNED              shift, and go to state 12
    UNSIGNED            shift, and go to state 13
    _BOOL               shift, and go to state 14
    _COMPLEX            shift, and go to state 15
    _IMAGINARY          shift, and go to state 16
    ENUM                shift, and go to state 17
    CONST               shift, and go to state 18
    RESTRICT            shift, and go to state 19
    VOLATILE            shift, and go to state 20
    INLINE              shift, and go to state 21
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    statement                  go to state 197
    labeled_statement          go to state 198
    compound_statement         go to state 199
    block_item_list            go to state 200
    block_item                 go to state 201
    expression_statement       go to state 202
    expression_opt             go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    declaration                go to state 207
    declaration_specifiers     go to state 67
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    enum_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 117

    5 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 5 (function_definition)


state 118

   10 declaration_list: declaration_list declaration .

    $default  reduce using rule 10 (declaration_list)


state 119

   95 direct_declarator: PARAN_OPEN declarator . PARAN_CLOSE

    PARAN_CLOSE  shift, and go to state 209


state 120

  100 direct_declarator: direct_declarator PARAN_OPEN . param_or_identi PARAN_CLOSE

    IDENTIFIER  shift, and go to state 210
    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    $default  reduce using rule 8 (epsilon)

    epsilon                  go to state 211
    declaration_specifiers   go to state 212
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    param_or_identi          go to state 213
    identifier_list_opt      go to state 214
    parameter_type_list      go to state 215
    parameter_list           go to state 216
    parameter_declaration    go to state 217
    identifier_list          go to state 218


state 121

   96 direct_declarator: direct_declarator SQ_OPEN . type_qualifier_list_opt assignment_expression_opt SQ_CLOSE
   97                  | direct_declarator SQ_OPEN . STATIC type_qualifier_list_opt assignment_expression SQ_CLOSE
   98                  | direct_declarator SQ_OPEN . type_qualifier_list STATIC assignment_expression SQ_CLOSE
   99                  | direct_declarator SQ_OPEN . type_qualifier_list_opt STAR SQ_CLOSE

    STATIC    shift, and go to state 219
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 8 (epsilon)

    epsilon                  go to state 56
    type_qualifier           go to state 57
    type_qualifier_list_opt  go to state 220
    type_qualifier_list      go to state 221


state 122

   80 identifier_opt_w_comma: IDENTIFIER CURLY_OPEN enumerator_list COMMA .
   83 enumerator_list: enumerator_list COMMA . enumerator

    IDENTIFIER  shift, and go to state 71

    $default  reduce using rule 80 (identifier_opt_w_comma)

    enumerator            go to state 222
    enumeration_constant  go to state 74


state 123

   85 enumerator: enumeration_constant EQUAL . constant_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 40 (constant_expression)

    constant_expression        go to state 223
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 224


state 124

   81 identifier_opt_w_comma: epsilon CURLY_OPEN enumerator_list COMMA .
   83 enumerator_list: enumerator_list COMMA . enumerator

    IDENTIFIER  shift, and go to state 71

    $default  reduce using rule 81 (identifier_opt_w_comma)

    enumerator            go to state 222
    enumeration_constant  go to state 74


state 125

  131 designator: SQ_OPEN . constant_expression SQ_CLOSE

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 40 (constant_expression)

    constant_expression        go to state 225
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 224


state 126

  132 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 226


state 127

  126 designation_opt: epsilon .

    $default  reduce using rule 126 (designation_opt)


state 128

  122 initializer: CURLY_OPEN initializer_list . CURLY_CLOSE
  123            | CURLY_OPEN initializer_list . COMMA CURLY_CLOSE
  125 initializer_list: initializer_list . COMMA designation_opt initializer

    CURLY_CLOSE  shift, and go to state 227
    COMMA        shift, and go to state 228


state 129

  124 initializer_list: designation_opt . initializer

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CURLY_OPEN          shift, and go to state 86
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    initializer                go to state 229
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 115


state 130

  127 designation_opt: designation .

    $default  reduce using rule 127 (designation_opt)


state 131

  128 designation: designator_list . EQUAL
  130 designator_list: designator_list . designator

    SQ_OPEN  shift, and go to state 125
    EQUAL    shift, and go to state 230
    DOT      shift, and go to state 126

    designator  go to state 231


state 132

  129 designator_list: designator .

    $default  reduce using rule 129 (designator_list)


state 133

   71 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20

    $default  reduce using rule 8 (epsilon)

    epsilon                       go to state 232
    type_specifier                go to state 133
    specifier_qualifier_list      go to state 233
    specifier_qualifier_list_opt  go to state 234
    enum_specifier                go to state 29
    type_qualifier                go to state 135


state 134

  120 type_name: specifier_qualifier_list .

    $default  reduce using rule 120 (type_name)


state 135

   72 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20

    $default  reduce using rule 8 (epsilon)

    epsilon                       go to state 232
    type_specifier                go to state 133
    specifier_qualifier_list      go to state 233
    specifier_qualifier_list_opt  go to state 235
    enum_specifier                go to state 29
    type_qualifier                go to state 135


state 136

  147 postfix_expression: PARAN_OPEN type_name . PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE
  148                   | PARAN_OPEN type_name . PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE
  166 cast_expression: PARAN_OPEN type_name . PARAN_CLOSE cast_expression

    PARAN_CLOSE  shift, and go to state 236


state 137

  210 expression: assignment_expression .

    $default  reduce using rule 210 (expression)


state 138

  136 primary_expression: PARAN_OPEN expression . PARAN_CLOSE
  211 expression: expression . COMMA assignment_expression

    PARAN_CLOSE  shift, and go to state 237
    COMMA        shift, and go to state 238


state 139

  136 primary_expression: PARAN_OPEN . expression PARAN_CLOSE
  147 postfix_expression: PARAN_OPEN . type_name PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE
  148                   | PARAN_OPEN . type_name PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    VOID                shift, and go to state 5
    CHAR                shift, and go to state 6
    SHORT               shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    FLOAT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    SIGNED              shift, and go to state 12
    UNSIGNED            shift, and go to state 13
    _BOOL               shift, and go to state 14
    _COMPLEX            shift, and go to state 15
    _IMAGINARY          shift, and go to state 16
    ENUM                shift, and go to state 17
    CONST               shift, and go to state 18
    RESTRICT            shift, and go to state 19
    VOLATILE            shift, and go to state 20
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    type_specifier             go to state 133
    specifier_qualifier_list   go to state 134
    enum_specifier             go to state 29
    type_qualifier             go to state 135
    type_name                  go to state 239
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 138


state 140

  154 unary_expression: INC unary_expression .

    $default  reduce using rule 154 (unary_expression)


state 141

  155 unary_expression: DEC unary_expression .

    $default  reduce using rule 155 (unary_expression)


state 142

  136 primary_expression: PARAN_OPEN . expression PARAN_CLOSE
  147 postfix_expression: PARAN_OPEN . type_name PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE
  148                   | PARAN_OPEN . type_name PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE
  158 unary_expression: SIZEOF PARAN_OPEN . type_name PARAN_CLOSE

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    VOID                shift, and go to state 5
    CHAR                shift, and go to state 6
    SHORT               shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    FLOAT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    SIGNED              shift, and go to state 12
    UNSIGNED            shift, and go to state 13
    _BOOL               shift, and go to state 14
    _COMPLEX            shift, and go to state 15
    _IMAGINARY          shift, and go to state 16
    ENUM                shift, and go to state 17
    CONST               shift, and go to state 18
    RESTRICT            shift, and go to state 19
    VOLATILE            shift, and go to state 20
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    type_specifier             go to state 133
    specifier_qualifier_list   go to state 134
    enum_specifier             go to state 29
    type_qualifier             go to state 135
    type_name                  go to state 240
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 138


state 143

  157 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 157 (unary_expression)


state 144

  142 postfix_expression: postfix_expression PARAN_OPEN . argument_expression_list_opt PARAN_CLOSE

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                       go to state 241
    primary_expression            go to state 98
    constant                      go to state 99
    postfix_expression            go to state 100
    argument_expression_list_opt  go to state 242
    argument_expression_list      go to state 243
    unary_expression              go to state 101
    unary_operator                go to state 102
    cast_expression               go to state 103
    multiplicative_expression     go to state 104
    additive_expression           go to state 105
    shift_expression              go to state 106
    relational_expression         go to state 107
    equality_expression           go to state 108
    and_expression                go to state 109
    exclusive_or_expression       go to state 110
    inclusive_or_expression       go to state 111
    logical_and_expression        go to state 112
    logical_or_expression         go to state 113
    conditional_expression        go to state 114
    assignment_expression         go to state 244


state 145

  141 postfix_expression: postfix_expression SQ_OPEN . expression SQ_CLOSE

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 245


state 146

  143 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 246


state 147

  144 postfix_expression: postfix_expression DEREF . IDENTIFIER

    IDENTIFIER  shift, and go to state 247


state 148

  145 postfix_expression: postfix_expression INC .

    $default  reduce using rule 145 (postfix_expression)


state 149

  146 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 146 (postfix_expression)


state 150

  199 assignment_operator: EQUAL .

    $default  reduce using rule 199 (assignment_operator)


state 151

  200 assignment_operator: STAREQUAL .

    $default  reduce using rule 200 (assignment_operator)


state 152

  201 assignment_operator: BYEQUAL .

    $default  reduce using rule 201 (assignment_operator)


state 153

  202 assignment_operator: MODEQUAL .

    $default  reduce using rule 202 (assignment_operator)


state 154

  203 assignment_operator: PLUSEQUAL .

    $default  reduce using rule 203 (assignment_operator)


state 155

  204 assignment_operator: MINUSEQUAL .

    $default  reduce using rule 204 (assignment_operator)


state 156

  205 assignment_operator: SLEQUAL .

    $default  reduce using rule 205 (assignment_operator)


state 157

  206 assignment_operator: SREQUAL .

    $default  reduce using rule 206 (assignment_operator)


state 158

  207 assignment_operator: ANDEQUAL .

    $default  reduce using rule 207 (assignment_operator)


state 159

  208 assignment_operator: CAPEQUAL .

    $default  reduce using rule 208 (assignment_operator)


state 160

  209 assignment_operator: OREQUAL .

    $default  reduce using rule 209 (assignment_operator)


state 161

  198 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 248


state 162

  165 cast_expression: unary_expression .

    $default  reduce using rule 165 (cast_expression)


state 163

  156 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 156 (unary_expression)


state 164

  168 multiplicative_expression: multiplicative_expression STAR . cast_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression  go to state 98
    constant            go to state 99
    postfix_expression  go to state 100
    unary_expression    go to state 162
    unary_operator      go to state 102
    cast_expression     go to state 249


state 165

  169 multiplicative_expression: multiplicative_expression BY . cast_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression  go to state 98
    constant            go to state 99
    postfix_expression  go to state 100
    unary_expression    go to state 162
    unary_operator      go to state 102
    cast_expression     go to state 250


state 166

  170 multiplicative_expression: multiplicative_expression MOD . cast_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression  go to state 98
    constant            go to state 99
    postfix_expression  go to state 100
    unary_expression    go to state 162
    unary_operator      go to state 102
    cast_expression     go to state 251


state 167

  172 additive_expression: additive_expression PLUS . multiplicative_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 252


state 168

  173 additive_expression: additive_expression MINUS . multiplicative_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 253


state 169

  175 shift_expression: shift_expression SL . additive_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 254


state 170

  176 shift_expression: shift_expression SR . additive_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 255


state 171

  178 relational_expression: relational_expression LT . shift_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 256


state 172

  179 relational_expression: relational_expression GT . shift_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 257


state 173

  180 relational_expression: relational_expression LTE . shift_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 258


state 174

  181 relational_expression: relational_expression GTE . shift_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 259


state 175

  183 equality_expression: equality_expression E . relational_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 260


state 176

  184 equality_expression: equality_expression NE . relational_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 261


state 177

  186 and_expression: and_expression AND . equality_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 262


state 178

  188 exclusive_or_expression: exclusive_or_expression CAP . equality_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 263


state 179

  190 inclusive_or_expression: inclusive_or_expression OR . exclusive_or_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 264


state 180

  192 logical_and_expression: logical_and_expression ANDAND . inclusive_or_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 265


state 181

  196 conditional_expression: logical_or_expression Q . expression COLON conditional_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 266


state 182

  194 logical_or_expression: logical_or_expression OROR . logical_and_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 267


state 183

   17 labeled_statement: IDENTIFIER . COLON statement
  133 primary_expression: IDENTIFIER .

    COLON  shift, and go to state 268

    $default  reduce using rule 133 (primary_expression)


state 184

   18 labeled_statement: CASE . constant_expression COLON statement

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 40 (constant_expression)

    constant_expression        go to state 269
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 224


state 185

   19 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 270


state 186

   21 compound_statement: CURLY_OPEN CURLY_CLOSE .

    $default  reduce using rule 21 (compound_statement)


state 187

   29 selection_statement: IF . PARAN_OPEN expression PARAN_CLOSE statement
   30                    | IF . PARAN_OPEN expression PARAN_CLOSE statement ELSE statement

    PARAN_OPEN  shift, and go to state 271


state 188

   31 selection_statement: SWITCH . PARAN_CLOSE expression PARAN_CLOSE statement

    PARAN_CLOSE  shift, and go to state 272


state 189

   34 iteration_statement: FOR . PARAN_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement
   35                    | FOR . PARAN_OPEN declaration SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement

    PARAN_OPEN  shift, and go to state 273


state 190

   32 iteration_statement: WHILE . PARAN_OPEN expression PARAN_CLOSE statement

    PARAN_OPEN  shift, and go to state 274


state 191

   33 iteration_statement: DO . statement WHILE PARAN_OPEN expression PARAN_CLOSE SEMI_COLON

    IDENTIFIER          shift, and go to state 183
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CASE                shift, and go to state 184
    DEFAULT             shift, and go to state 185
    CURLY_OPEN          shift, and go to state 116
    PARAN_OPEN          shift, and go to state 87
    IF                  shift, and go to state 187
    SWITCH              shift, and go to state 188
    FOR                 shift, and go to state 189
    WHILE               shift, and go to state 190
    DO                  shift, and go to state 191
    GOTO                shift, and go to state 192
    CONTINUE            shift, and go to state 193
    BREAK               shift, and go to state 194
    RETURN              shift, and go to state 195
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    statement                  go to state 275
    labeled_statement          go to state 198
    compound_statement         go to state 199
    expression_statement       go to state 202
    expression_opt             go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 192

   36 jump_statement: GOTO . IDENTIFIER SEMI_COLON

    IDENTIFIER  shift, and go to state 276


state 193

   37 jump_statement: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 277


state 194

   38 jump_statement: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 278


state 195

   39 jump_statement: RETURN . expression_opt SEMI_COLON

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    expression_opt             go to state 279
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 196

   27 expression_opt: epsilon .

    $default  reduce using rule 27 (expression_opt)


state 197

   24 block_item: statement .

    $default  reduce using rule 24 (block_item)


state 198

   11 statement: labeled_statement .

    $default  reduce using rule 11 (statement)


state 199

   12 statement: compound_statement .

    $default  reduce using rule 12 (statement)


state 200

   20 compound_statement: CURLY_OPEN block_item_list . CURLY_CLOSE
   23 block_item_list: block_item_list . block_item

    IDENTIFIER          shift, and go to state 183
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CASE                shift, and go to state 184
    DEFAULT             shift, and go to state 185
    CURLY_OPEN          shift, and go to state 116
    CURLY_CLOSE         shift, and go to state 280
    PARAN_OPEN          shift, and go to state 87
    IF                  shift, and go to state 187
    SWITCH              shift, and go to state 188
    FOR                 shift, and go to state 189
    WHILE               shift, and go to state 190
    DO                  shift, and go to state 191
    GOTO                shift, and go to state 192
    CONTINUE            shift, and go to state 193
    BREAK               shift, and go to state 194
    RETURN              shift, and go to state 195
    EXTERN              shift, and go to state 1
    STATIC              shift, and go to state 2
    AUTO                shift, and go to state 3
    REGISTER            shift, and go to state 4
    VOID                shift, and go to state 5
    CHAR                shift, and go to state 6
    SHORT               shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    FLOAT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    SIGNED              shift, and go to state 12
    UNSIGNED            shift, and go to state 13
    _BOOL               shift, and go to state 14
    _COMPLEX            shift, and go to state 15
    _IMAGINARY          shift, and go to state 16
    ENUM                shift, and go to state 17
    CONST               shift, and go to state 18
    RESTRICT            shift, and go to state 19
    VOLATILE            shift, and go to state 20
    INLINE              shift, and go to state 21
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    statement                  go to state 197
    labeled_statement          go to state 198
    compound_statement         go to state 199
    block_item                 go to state 281
    expression_statement       go to state 202
    expression_opt             go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    declaration                go to state 207
    declaration_specifiers     go to state 67
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    enum_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 201

   22 block_item_list: block_item .

    $default  reduce using rule 22 (block_item_list)


state 202

   13 statement: expression_statement .

    $default  reduce using rule 13 (statement)


state 203

   26 expression_statement: expression_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 282


state 204

   14 statement: selection_statement .

    $default  reduce using rule 14 (statement)


state 205

   15 statement: iteration_statement .

    $default  reduce using rule 15 (statement)


state 206

   16 statement: jump_statement .

    $default  reduce using rule 16 (statement)


state 207

   25 block_item: declaration .

    $default  reduce using rule 25 (block_item)


state 208

   28 expression_opt: expression .
  211 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 238

    $default  reduce using rule 28 (expression_opt)


state 209

   95 direct_declarator: PARAN_OPEN declarator PARAN_CLOSE .

    $default  reduce using rule 95 (direct_declarator)


state 210

  118 identifier_list: IDENTIFIER .

    $default  reduce using rule 118 (identifier_list)


state 211

  107 identifier_list_opt: epsilon .

    $default  reduce using rule 107 (identifier_list_opt)


state 212

  116 parameter_declaration: declaration_specifiers . declarator
  117                      | declaration_specifiers .

    STAR  shift, and go to state 38

    PARAN_CLOSE  reduce using rule 117 (parameter_declaration)
    COMMA        reduce using rule 117 (parameter_declaration)
    $default     reduce using rule 8 (epsilon)

    epsilon      go to state 76
    declarator   go to state 283
    pointer_opt  go to state 44
    pointer      go to state 45


state 213

  100 direct_declarator: direct_declarator PARAN_OPEN param_or_identi . PARAN_CLOSE

    PARAN_CLOSE  shift, and go to state 284


state 214

  102 param_or_identi: identifier_list_opt .

    $default  reduce using rule 102 (param_or_identi)


state 215

  101 param_or_identi: parameter_type_list .

    $default  reduce using rule 101 (param_or_identi)


state 216

  112 parameter_type_list: parameter_list .
  113                    | parameter_list . COMMA ELIPSIS
  115 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 285

    $default  reduce using rule 112 (parameter_type_list)


state 217

  114 parameter_list: parameter_declaration .

    $default  reduce using rule 114 (parameter_list)


state 218

  108 identifier_list_opt: identifier_list .
  119 identifier_list: identifier_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 286

    $default  reduce using rule 108 (identifier_list_opt)


state 219

   97 direct_declarator: direct_declarator SQ_OPEN STATIC . type_qualifier_list_opt assignment_expression SQ_CLOSE

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 8 (epsilon)

    epsilon                  go to state 56
    type_qualifier           go to state 57
    type_qualifier_list_opt  go to state 287
    type_qualifier_list      go to state 59


state 220

   96 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt . assignment_expression_opt SQ_CLOSE
   99                  | direct_declarator SQ_OPEN type_qualifier_list_opt . STAR SQ_CLOSE

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 288
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 289
    assignment_expression_opt  go to state 290
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 291


state 221

   98 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list . STATIC assignment_expression SQ_CLOSE
  104 type_qualifier_list_opt: type_qualifier_list .
  111 type_qualifier_list: type_qualifier_list . type_qualifier

    STATIC    shift, and go to state 292
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 104 (type_qualifier_list_opt)

    type_qualifier  go to state 78


state 222

   83 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 83 (enumerator_list)


state 223

   85 enumerator: enumeration_constant EQUAL constant_expression .

    $default  reduce using rule 85 (enumerator)


state 224

  212 constant_expression: conditional_expression .

    $default  reduce using rule 212 (constant_expression)


state 225

  131 designator: SQ_OPEN constant_expression . SQ_CLOSE

    SQ_CLOSE  shift, and go to state 293


state 226

  132 designator: DOT IDENTIFIER .

    $default  reduce using rule 132 (designator)


state 227

  122 initializer: CURLY_OPEN initializer_list CURLY_CLOSE .

    $default  reduce using rule 122 (initializer)


state 228

  123 initializer: CURLY_OPEN initializer_list COMMA . CURLY_CLOSE
  125 initializer_list: initializer_list COMMA . designation_opt initializer

    CURLY_CLOSE  shift, and go to state 294
    SQ_OPEN      shift, and go to state 125
    DOT          shift, and go to state 126

    $default  reduce using rule 8 (epsilon)

    epsilon          go to state 127
    designation_opt  go to state 295
    designation      go to state 130
    designator_list  go to state 131
    designator       go to state 132


state 229

  124 initializer_list: designation_opt initializer .

    $default  reduce using rule 124 (initializer_list)


state 230

  128 designation: designator_list EQUAL .

    $default  reduce using rule 128 (designation)


state 231

  130 designator_list: designator_list designator .

    $default  reduce using rule 130 (designator_list)


state 232

   73 specifier_qualifier_list_opt: epsilon .

    $default  reduce using rule 73 (specifier_qualifier_list_opt)


state 233

   74 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 74 (specifier_qualifier_list_opt)


state 234

   71 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 71 (specifier_qualifier_list)


state 235

   72 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 72 (specifier_qualifier_list)


state 236

  147 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE . CURLY_OPEN initializer_list CURLY_CLOSE
  148                   | PARAN_OPEN type_name PARAN_CLOSE . CURLY_OPEN initializer_list COMMA CURLY_CLOSE
  166 cast_expression: PARAN_OPEN type_name PARAN_CLOSE . cast_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CURLY_OPEN          shift, and go to state 296
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression  go to state 98
    constant            go to state 99
    postfix_expression  go to state 100
    unary_expression    go to state 162
    unary_operator      go to state 102
    cast_expression     go to state 297


state 237

  136 primary_expression: PARAN_OPEN expression PARAN_CLOSE .

    $default  reduce using rule 136 (primary_expression)


state 238

  211 expression: expression COMMA . assignment_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 298


state 239

  147 postfix_expression: PARAN_OPEN type_name . PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE
  148                   | PARAN_OPEN type_name . PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE

    PARAN_CLOSE  shift, and go to state 299


state 240

  147 postfix_expression: PARAN_OPEN type_name . PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE
  148                   | PARAN_OPEN type_name . PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE
  158 unary_expression: SIZEOF PARAN_OPEN type_name . PARAN_CLOSE

    PARAN_CLOSE  shift, and go to state 300


state 241

  149 argument_expression_list_opt: epsilon .

    $default  reduce using rule 149 (argument_expression_list_opt)


state 242

  142 postfix_expression: postfix_expression PARAN_OPEN argument_expression_list_opt . PARAN_CLOSE

    PARAN_CLOSE  shift, and go to state 301


state 243

  150 argument_expression_list_opt: argument_expression_list .
  152 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 302

    $default  reduce using rule 150 (argument_expression_list_opt)


state 244

  151 argument_expression_list: assignment_expression .

    $default  reduce using rule 151 (argument_expression_list)


state 245

  141 postfix_expression: postfix_expression SQ_OPEN expression . SQ_CLOSE
  211 expression: expression . COMMA assignment_expression

    SQ_CLOSE  shift, and go to state 303
    COMMA     shift, and go to state 238


state 246

  143 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 143 (postfix_expression)


state 247

  144 postfix_expression: postfix_expression DEREF IDENTIFIER .

    $default  reduce using rule 144 (postfix_expression)


state 248

  198 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 198 (assignment_expression)


state 249

  168 multiplicative_expression: multiplicative_expression STAR cast_expression .

    $default  reduce using rule 168 (multiplicative_expression)


state 250

  169 multiplicative_expression: multiplicative_expression BY cast_expression .

    $default  reduce using rule 169 (multiplicative_expression)


state 251

  170 multiplicative_expression: multiplicative_expression MOD cast_expression .

    $default  reduce using rule 170 (multiplicative_expression)


state 252

  168 multiplicative_expression: multiplicative_expression . STAR cast_expression
  169                          | multiplicative_expression . BY cast_expression
  170                          | multiplicative_expression . MOD cast_expression
  172 additive_expression: additive_expression PLUS multiplicative_expression .

    STAR  shift, and go to state 164
    BY    shift, and go to state 165
    MOD   shift, and go to state 166

    $default  reduce using rule 172 (additive_expression)


state 253

  168 multiplicative_expression: multiplicative_expression . STAR cast_expression
  169                          | multiplicative_expression . BY cast_expression
  170                          | multiplicative_expression . MOD cast_expression
  173 additive_expression: additive_expression MINUS multiplicative_expression .

    STAR  shift, and go to state 164
    BY    shift, and go to state 165
    MOD   shift, and go to state 166

    $default  reduce using rule 173 (additive_expression)


state 254

  172 additive_expression: additive_expression . PLUS multiplicative_expression
  173                    | additive_expression . MINUS multiplicative_expression
  175 shift_expression: shift_expression SL additive_expression .

    PLUS   shift, and go to state 167
    MINUS  shift, and go to state 168

    $default  reduce using rule 175 (shift_expression)


state 255

  172 additive_expression: additive_expression . PLUS multiplicative_expression
  173                    | additive_expression . MINUS multiplicative_expression
  176 shift_expression: shift_expression SR additive_expression .

    PLUS   shift, and go to state 167
    MINUS  shift, and go to state 168

    $default  reduce using rule 176 (shift_expression)


state 256

  175 shift_expression: shift_expression . SL additive_expression
  176                 | shift_expression . SR additive_expression
  178 relational_expression: relational_expression LT shift_expression .

    SL  shift, and go to state 169
    SR  shift, and go to state 170

    $default  reduce using rule 178 (relational_expression)


state 257

  175 shift_expression: shift_expression . SL additive_expression
  176                 | shift_expression . SR additive_expression
  179 relational_expression: relational_expression GT shift_expression .

    SL  shift, and go to state 169
    SR  shift, and go to state 170

    $default  reduce using rule 179 (relational_expression)


state 258

  175 shift_expression: shift_expression . SL additive_expression
  176                 | shift_expression . SR additive_expression
  180 relational_expression: relational_expression LTE shift_expression .

    SL  shift, and go to state 169
    SR  shift, and go to state 170

    $default  reduce using rule 180 (relational_expression)


state 259

  175 shift_expression: shift_expression . SL additive_expression
  176                 | shift_expression . SR additive_expression
  181 relational_expression: relational_expression GTE shift_expression .

    SL  shift, and go to state 169
    SR  shift, and go to state 170

    $default  reduce using rule 181 (relational_expression)


state 260

  178 relational_expression: relational_expression . LT shift_expression
  179                      | relational_expression . GT shift_expression
  180                      | relational_expression . LTE shift_expression
  181                      | relational_expression . GTE shift_expression
  183 equality_expression: equality_expression E relational_expression .

    LT   shift, and go to state 171
    GT   shift, and go to state 172
    LTE  shift, and go to state 173
    GTE  shift, and go to state 174

    $default  reduce using rule 183 (equality_expression)


state 261

  178 relational_expression: relational_expression . LT shift_expression
  179                      | relational_expression . GT shift_expression
  180                      | relational_expression . LTE shift_expression
  181                      | relational_expression . GTE shift_expression
  184 equality_expression: equality_expression NE relational_expression .

    LT   shift, and go to state 171
    GT   shift, and go to state 172
    LTE  shift, and go to state 173
    GTE  shift, and go to state 174

    $default  reduce using rule 184 (equality_expression)


state 262

  183 equality_expression: equality_expression . E relational_expression
  184                    | equality_expression . NE relational_expression
  186 and_expression: and_expression AND equality_expression .

    E   shift, and go to state 175
    NE  shift, and go to state 176

    $default  reduce using rule 186 (and_expression)


state 263

  183 equality_expression: equality_expression . E relational_expression
  184                    | equality_expression . NE relational_expression
  188 exclusive_or_expression: exclusive_or_expression CAP equality_expression .

    E   shift, and go to state 175
    NE  shift, and go to state 176

    $default  reduce using rule 188 (exclusive_or_expression)


state 264

  188 exclusive_or_expression: exclusive_or_expression . CAP equality_expression
  190 inclusive_or_expression: inclusive_or_expression OR exclusive_or_expression .

    CAP  shift, and go to state 178

    $default  reduce using rule 190 (inclusive_or_expression)


state 265

  190 inclusive_or_expression: inclusive_or_expression . OR exclusive_or_expression
  192 logical_and_expression: logical_and_expression ANDAND inclusive_or_expression .

    OR  shift, and go to state 179

    $default  reduce using rule 192 (logical_and_expression)


state 266

  196 conditional_expression: logical_or_expression Q expression . COLON conditional_expression
  211 expression: expression . COMMA assignment_expression

    COLON  shift, and go to state 304
    COMMA  shift, and go to state 238


state 267

  192 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  194 logical_or_expression: logical_or_expression OROR logical_and_expression .

    ANDAND  shift, and go to state 180

    $default  reduce using rule 194 (logical_or_expression)


state 268

   17 labeled_statement: IDENTIFIER COLON . statement

    IDENTIFIER          shift, and go to state 183
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CASE                shift, and go to state 184
    DEFAULT             shift, and go to state 185
    CURLY_OPEN          shift, and go to state 116
    PARAN_OPEN          shift, and go to state 87
    IF                  shift, and go to state 187
    SWITCH              shift, and go to state 188
    FOR                 shift, and go to state 189
    WHILE               shift, and go to state 190
    DO                  shift, and go to state 191
    GOTO                shift, and go to state 192
    CONTINUE            shift, and go to state 193
    BREAK               shift, and go to state 194
    RETURN              shift, and go to state 195
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    statement                  go to state 305
    labeled_statement          go to state 198
    compound_statement         go to state 199
    expression_statement       go to state 202
    expression_opt             go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 269

   18 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 306


state 270

   19 labeled_statement: DEFAULT COLON . statement

    IDENTIFIER          shift, and go to state 183
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CASE                shift, and go to state 184
    DEFAULT             shift, and go to state 185
    CURLY_OPEN          shift, and go to state 116
    PARAN_OPEN          shift, and go to state 87
    IF                  shift, and go to state 187
    SWITCH              shift, and go to state 188
    FOR                 shift, and go to state 189
    WHILE               shift, and go to state 190
    DO                  shift, and go to state 191
    GOTO                shift, and go to state 192
    CONTINUE            shift, and go to state 193
    BREAK               shift, and go to state 194
    RETURN              shift, and go to state 195
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    statement                  go to state 307
    labeled_statement          go to state 198
    compound_statement         go to state 199
    expression_statement       go to state 202
    expression_opt             go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 271

   29 selection_statement: IF PARAN_OPEN . expression PARAN_CLOSE statement
   30                    | IF PARAN_OPEN . expression PARAN_CLOSE statement ELSE statement

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 308


state 272

   31 selection_statement: SWITCH PARAN_CLOSE . expression PARAN_CLOSE statement

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 309


state 273

   34 iteration_statement: FOR PARAN_OPEN . expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement
   35                    | FOR PARAN_OPEN . declaration SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    EXTERN              shift, and go to state 1
    STATIC              shift, and go to state 2
    AUTO                shift, and go to state 3
    REGISTER            shift, and go to state 4
    VOID                shift, and go to state 5
    CHAR                shift, and go to state 6
    SHORT               shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    FLOAT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    SIGNED              shift, and go to state 12
    UNSIGNED            shift, and go to state 13
    _BOOL               shift, and go to state 14
    _COMPLEX            shift, and go to state 15
    _IMAGINARY          shift, and go to state 16
    ENUM                shift, and go to state 17
    CONST               shift, and go to state 18
    RESTRICT            shift, and go to state 19
    VOLATILE            shift, and go to state 20
    INLINE              shift, and go to state 21
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    expression_opt             go to state 310
    declaration                go to state 311
    declaration_specifiers     go to state 67
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    enum_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 274

   32 iteration_statement: WHILE PARAN_OPEN . expression PARAN_CLOSE statement

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 312


state 275

   33 iteration_statement: DO statement . WHILE PARAN_OPEN expression PARAN_CLOSE SEMI_COLON

    WHILE  shift, and go to state 313


state 276

   36 jump_statement: GOTO IDENTIFIER . SEMI_COLON

    SEMI_COLON  shift, and go to state 314


state 277

   37 jump_statement: CONTINUE SEMI_COLON .

    $default  reduce using rule 37 (jump_statement)


state 278

   38 jump_statement: BREAK SEMI_COLON .

    $default  reduce using rule 38 (jump_statement)


state 279

   39 jump_statement: RETURN expression_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 315


state 280

   20 compound_statement: CURLY_OPEN block_item_list CURLY_CLOSE .

    $default  reduce using rule 20 (compound_statement)


state 281

   23 block_item_list: block_item_list block_item .

    $default  reduce using rule 23 (block_item_list)


state 282

   26 expression_statement: expression_opt SEMI_COLON .

    $default  reduce using rule 26 (expression_statement)


state 283

  116 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 116 (parameter_declaration)


state 284

  100 direct_declarator: direct_declarator PARAN_OPEN param_or_identi PARAN_CLOSE .

    $default  reduce using rule 100 (direct_declarator)


state 285

  113 parameter_type_list: parameter_list COMMA . ELIPSIS
  115 parameter_list: parameter_list COMMA . parameter_declaration

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21
    ELIPSIS     shift, and go to state 316

    declaration_specifiers   go to state 212
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    parameter_declaration    go to state 317


state 286

  119 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 318


state 287

   97 direct_declarator: direct_declarator SQ_OPEN STATIC type_qualifier_list_opt . assignment_expression SQ_CLOSE

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 319


state 288

   99 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt STAR . SQ_CLOSE
  160 unary_operator: STAR .

    SQ_CLOSE  shift, and go to state 320

    $default  reduce using rule 160 (unary_operator)


state 289

  105 assignment_expression_opt: epsilon .

    $default  reduce using rule 105 (assignment_expression_opt)


state 290

   96 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt assignment_expression_opt . SQ_CLOSE

    SQ_CLOSE  shift, and go to state 321


state 291

  106 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 106 (assignment_expression_opt)


state 292

   98 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list STATIC . assignment_expression SQ_CLOSE

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 322


state 293

  131 designator: SQ_OPEN constant_expression SQ_CLOSE .

    $default  reduce using rule 131 (designator)


state 294

  123 initializer: CURLY_OPEN initializer_list COMMA CURLY_CLOSE .

    $default  reduce using rule 123 (initializer)


state 295

  125 initializer_list: initializer_list COMMA designation_opt . initializer

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CURLY_OPEN          shift, and go to state 86
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    initializer                go to state 323
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 115


state 296

  147 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN . initializer_list CURLY_CLOSE
  148                   | PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN . initializer_list COMMA CURLY_CLOSE

    SQ_OPEN  shift, and go to state 125
    DOT      shift, and go to state 126

    $default  reduce using rule 8 (epsilon)

    epsilon           go to state 127
    initializer_list  go to state 324
    designation_opt   go to state 129
    designation       go to state 130
    designator_list   go to state 131
    designator        go to state 132


state 297

  166 cast_expression: PARAN_OPEN type_name PARAN_CLOSE cast_expression .

    $default  reduce using rule 166 (cast_expression)


state 298

  211 expression: expression COMMA assignment_expression .

    $default  reduce using rule 211 (expression)


state 299

  147 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE . CURLY_OPEN initializer_list CURLY_CLOSE
  148                   | PARAN_OPEN type_name PARAN_CLOSE . CURLY_OPEN initializer_list COMMA CURLY_CLOSE

    CURLY_OPEN  shift, and go to state 296


state 300

  147 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE . CURLY_OPEN initializer_list CURLY_CLOSE
  148                   | PARAN_OPEN type_name PARAN_CLOSE . CURLY_OPEN initializer_list COMMA CURLY_CLOSE
  158 unary_expression: SIZEOF PARAN_OPEN type_name PARAN_CLOSE .

    CURLY_OPEN  shift, and go to state 296

    $default  reduce using rule 158 (unary_expression)


state 301

  142 postfix_expression: postfix_expression PARAN_OPEN argument_expression_list_opt PARAN_CLOSE .

    $default  reduce using rule 142 (postfix_expression)


state 302

  152 argument_expression_list: argument_expression_list COMMA . assignment_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 325


state 303

  141 postfix_expression: postfix_expression SQ_OPEN expression SQ_CLOSE .

    $default  reduce using rule 141 (postfix_expression)


state 304

  196 conditional_expression: logical_or_expression Q expression COLON . conditional_expression

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 162
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 326


state 305

   17 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 17 (labeled_statement)


state 306

   18 labeled_statement: CASE constant_expression COLON . statement

    IDENTIFIER          shift, and go to state 183
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CASE                shift, and go to state 184
    DEFAULT             shift, and go to state 185
    CURLY_OPEN          shift, and go to state 116
    PARAN_OPEN          shift, and go to state 87
    IF                  shift, and go to state 187
    SWITCH              shift, and go to state 188
    FOR                 shift, and go to state 189
    WHILE               shift, and go to state 190
    DO                  shift, and go to state 191
    GOTO                shift, and go to state 192
    CONTINUE            shift, and go to state 193
    BREAK               shift, and go to state 194
    RETURN              shift, and go to state 195
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    statement                  go to state 327
    labeled_statement          go to state 198
    compound_statement         go to state 199
    expression_statement       go to state 202
    expression_opt             go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 307

   19 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 19 (labeled_statement)


state 308

   29 selection_statement: IF PARAN_OPEN expression . PARAN_CLOSE statement
   30                    | IF PARAN_OPEN expression . PARAN_CLOSE statement ELSE statement
  211 expression: expression . COMMA assignment_expression

    PARAN_CLOSE  shift, and go to state 328
    COMMA        shift, and go to state 238


state 309

   31 selection_statement: SWITCH PARAN_CLOSE expression . PARAN_CLOSE statement
  211 expression: expression . COMMA assignment_expression

    PARAN_CLOSE  shift, and go to state 329
    COMMA        shift, and go to state 238


state 310

   34 iteration_statement: FOR PARAN_OPEN expression_opt . SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement

    SEMI_COLON  shift, and go to state 330


state 311

   35 iteration_statement: FOR PARAN_OPEN declaration . SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement

    SEMI_COLON  shift, and go to state 331


state 312

   32 iteration_statement: WHILE PARAN_OPEN expression . PARAN_CLOSE statement
  211 expression: expression . COMMA assignment_expression

    PARAN_CLOSE  shift, and go to state 332
    COMMA        shift, and go to state 238


state 313

   33 iteration_statement: DO statement WHILE . PARAN_OPEN expression PARAN_CLOSE SEMI_COLON

    PARAN_OPEN  shift, and go to state 333


state 314

   36 jump_statement: GOTO IDENTIFIER SEMI_COLON .

    $default  reduce using rule 36 (jump_statement)


state 315

   39 jump_statement: RETURN expression_opt SEMI_COLON .

    $default  reduce using rule 39 (jump_statement)


state 316

  113 parameter_type_list: parameter_list COMMA ELIPSIS .

    $default  reduce using rule 113 (parameter_type_list)


state 317

  115 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 115 (parameter_list)


state 318

  119 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 119 (identifier_list)


state 319

   97 direct_declarator: direct_declarator SQ_OPEN STATIC type_qualifier_list_opt assignment_expression . SQ_CLOSE

    SQ_CLOSE  shift, and go to state 334


state 320

   99 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt STAR SQ_CLOSE .

    $default  reduce using rule 99 (direct_declarator)


state 321

   96 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt assignment_expression_opt SQ_CLOSE .

    $default  reduce using rule 96 (direct_declarator)


state 322

   98 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list STATIC assignment_expression . SQ_CLOSE

    SQ_CLOSE  shift, and go to state 335


state 323

  125 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 125 (initializer_list)


state 324

  125 initializer_list: initializer_list . COMMA designation_opt initializer
  147 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN initializer_list . CURLY_CLOSE
  148                   | PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN initializer_list . COMMA CURLY_CLOSE

    CURLY_CLOSE  shift, and go to state 336
    COMMA        shift, and go to state 337


state 325

  152 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 152 (argument_expression_list)


state 326

  196 conditional_expression: logical_or_expression Q expression COLON conditional_expression .

    $default  reduce using rule 196 (conditional_expression)


state 327

   18 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 18 (labeled_statement)


state 328

   29 selection_statement: IF PARAN_OPEN expression PARAN_CLOSE . statement
   30                    | IF PARAN_OPEN expression PARAN_CLOSE . statement ELSE statement

    IDENTIFIER          shift, and go to state 183
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CASE                shift, and go to state 184
    DEFAULT             shift, and go to state 185
    CURLY_OPEN          shift, and go to state 116
    PARAN_OPEN          shift, and go to state 87
    IF                  shift, and go to state 187
    SWITCH              shift, and go to state 188
    FOR                 shift, and go to state 189
    WHILE               shift, and go to state 190
    DO                  shift, and go to state 191
    GOTO                shift, and go to state 192
    CONTINUE            shift, and go to state 193
    BREAK               shift, and go to state 194
    RETURN              shift, and go to state 195
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    statement                  go to state 338
    labeled_statement          go to state 198
    compound_statement         go to state 199
    expression_statement       go to state 202
    expression_opt             go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 329

   31 selection_statement: SWITCH PARAN_CLOSE expression PARAN_CLOSE . statement

    IDENTIFIER          shift, and go to state 183
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CASE                shift, and go to state 184
    DEFAULT             shift, and go to state 185
    CURLY_OPEN          shift, and go to state 116
    PARAN_OPEN          shift, and go to state 87
    IF                  shift, and go to state 187
    SWITCH              shift, and go to state 188
    FOR                 shift, and go to state 189
    WHILE               shift, and go to state 190
    DO                  shift, and go to state 191
    GOTO                shift, and go to state 192
    CONTINUE            shift, and go to state 193
    BREAK               shift, and go to state 194
    RETURN              shift, and go to state 195
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    statement                  go to state 339
    labeled_statement          go to state 198
    compound_statement         go to state 199
    expression_statement       go to state 202
    expression_opt             go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 330

   34 iteration_statement: FOR PARAN_OPEN expression_opt SEMI_COLON . expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    expression_opt             go to state 340
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 331

   35 iteration_statement: FOR PARAN_OPEN declaration SEMI_COLON . expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    expression_opt             go to state 341
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 332

   32 iteration_statement: WHILE PARAN_OPEN expression PARAN_CLOSE . statement

    IDENTIFIER          shift, and go to state 183
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CASE                shift, and go to state 184
    DEFAULT             shift, and go to state 185
    CURLY_OPEN          shift, and go to state 116
    PARAN_OPEN          shift, and go to state 87
    IF                  shift, and go to state 187
    SWITCH              shift, and go to state 188
    FOR                 shift, and go to state 189
    WHILE               shift, and go to state 190
    DO                  shift, and go to state 191
    GOTO                shift, and go to state 192
    CONTINUE            shift, and go to state 193
    BREAK               shift, and go to state 194
    RETURN              shift, and go to state 195
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    statement                  go to state 342
    labeled_statement          go to state 198
    compound_statement         go to state 199
    expression_statement       go to state 202
    expression_opt             go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 333

   33 iteration_statement: DO statement WHILE PARAN_OPEN . expression PARAN_CLOSE SEMI_COLON

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 343


state 334

   97 direct_declarator: direct_declarator SQ_OPEN STATIC type_qualifier_list_opt assignment_expression SQ_CLOSE .

    $default  reduce using rule 97 (direct_declarator)


state 335

   98 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list STATIC assignment_expression SQ_CLOSE .

    $default  reduce using rule 98 (direct_declarator)


state 336

  147 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE .

    $default  reduce using rule 147 (postfix_expression)


state 337

  125 initializer_list: initializer_list COMMA . designation_opt initializer
  148 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN initializer_list COMMA . CURLY_CLOSE

    CURLY_CLOSE  shift, and go to state 344
    SQ_OPEN      shift, and go to state 125
    DOT          shift, and go to state 126

    $default  reduce using rule 8 (epsilon)

    epsilon          go to state 127
    designation_opt  go to state 295
    designation      go to state 130
    designator_list  go to state 131
    designator       go to state 132


state 338

   29 selection_statement: IF PARAN_OPEN expression PARAN_CLOSE statement .
   30                    | IF PARAN_OPEN expression PARAN_CLOSE statement . ELSE statement

    ELSE  shift, and go to state 345

    $default  reduce using rule 29 (selection_statement)


state 339

   31 selection_statement: SWITCH PARAN_CLOSE expression PARAN_CLOSE statement .

    $default  reduce using rule 31 (selection_statement)


state 340

   34 iteration_statement: FOR PARAN_OPEN expression_opt SEMI_COLON expression_opt . SEMI_COLON expression_opt PARAN_CLOSE statement

    SEMI_COLON  shift, and go to state 346


state 341

   35 iteration_statement: FOR PARAN_OPEN declaration SEMI_COLON expression_opt . SEMI_COLON expression_opt PARAN_CLOSE statement

    SEMI_COLON  shift, and go to state 347


state 342

   32 iteration_statement: WHILE PARAN_OPEN expression PARAN_CLOSE statement .

    $default  reduce using rule 32 (iteration_statement)


state 343

   33 iteration_statement: DO statement WHILE PARAN_OPEN expression . PARAN_CLOSE SEMI_COLON
  211 expression: expression . COMMA assignment_expression

    PARAN_CLOSE  shift, and go to state 348
    COMMA        shift, and go to state 238


state 344

  148 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE .

    $default  reduce using rule 148 (postfix_expression)


state 345

   30 selection_statement: IF PARAN_OPEN expression PARAN_CLOSE statement ELSE . statement

    IDENTIFIER          shift, and go to state 183
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CASE                shift, and go to state 184
    DEFAULT             shift, and go to state 185
    CURLY_OPEN          shift, and go to state 116
    PARAN_OPEN          shift, and go to state 87
    IF                  shift, and go to state 187
    SWITCH              shift, and go to state 188
    FOR                 shift, and go to state 189
    WHILE               shift, and go to state 190
    DO                  shift, and go to state 191
    GOTO                shift, and go to state 192
    CONTINUE            shift, and go to state 193
    BREAK               shift, and go to state 194
    RETURN              shift, and go to state 195
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    statement                  go to state 349
    labeled_statement          go to state 198
    compound_statement         go to state 199
    expression_statement       go to state 202
    expression_opt             go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 346

   34 iteration_statement: FOR PARAN_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON . expression_opt PARAN_CLOSE statement

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    expression_opt             go to state 350
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 347

   35 iteration_statement: FOR PARAN_OPEN declaration SEMI_COLON expression_opt SEMI_COLON . expression_opt PARAN_CLOSE statement

    IDENTIFIER          shift, and go to state 81
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    PARAN_OPEN          shift, and go to state 87
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    expression_opt             go to state 351
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 348

   33 iteration_statement: DO statement WHILE PARAN_OPEN expression PARAN_CLOSE . SEMI_COLON

    SEMI_COLON  shift, and go to state 352


state 349

   30 selection_statement: IF PARAN_OPEN expression PARAN_CLOSE statement ELSE statement .

    $default  reduce using rule 30 (selection_statement)


state 350

   34 iteration_statement: FOR PARAN_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt . PARAN_CLOSE statement

    PARAN_CLOSE  shift, and go to state 353


state 351

   35 iteration_statement: FOR PARAN_OPEN declaration SEMI_COLON expression_opt SEMI_COLON expression_opt . PARAN_CLOSE statement

    PARAN_CLOSE  shift, and go to state 354


state 352

   33 iteration_statement: DO statement WHILE PARAN_OPEN expression PARAN_CLOSE SEMI_COLON .

    $default  reduce using rule 33 (iteration_statement)


state 353

   34 iteration_statement: FOR PARAN_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE . statement

    IDENTIFIER          shift, and go to state 183
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CASE                shift, and go to state 184
    DEFAULT             shift, and go to state 185
    CURLY_OPEN          shift, and go to state 116
    PARAN_OPEN          shift, and go to state 87
    IF                  shift, and go to state 187
    SWITCH              shift, and go to state 188
    FOR                 shift, and go to state 189
    WHILE               shift, and go to state 190
    DO                  shift, and go to state 191
    GOTO                shift, and go to state 192
    CONTINUE            shift, and go to state 193
    BREAK               shift, and go to state 194
    RETURN              shift, and go to state 195
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    statement                  go to state 355
    labeled_statement          go to state 198
    compound_statement         go to state 199
    expression_statement       go to state 202
    expression_opt             go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 354

   35 iteration_statement: FOR PARAN_OPEN declaration SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE . statement

    IDENTIFIER          shift, and go to state 183
    INTEGER_CONSTANT    shift, and go to state 82
    FLOATING_CONSTANT   shift, and go to state 83
    CHARACTER_CONSTANT  shift, and go to state 84
    STRING_LITERAL      shift, and go to state 85
    CASE                shift, and go to state 184
    DEFAULT             shift, and go to state 185
    CURLY_OPEN          shift, and go to state 116
    PARAN_OPEN          shift, and go to state 87
    IF                  shift, and go to state 187
    SWITCH              shift, and go to state 188
    FOR                 shift, and go to state 189
    WHILE               shift, and go to state 190
    DO                  shift, and go to state 191
    GOTO                shift, and go to state 192
    CONTINUE            shift, and go to state 193
    BREAK               shift, and go to state 194
    RETURN              shift, and go to state 195
    STAR                shift, and go to state 88
    INC                 shift, and go to state 89
    DEC                 shift, and go to state 90
    SIZEOF              shift, and go to state 91
    PLUS                shift, and go to state 92
    MINUS               shift, and go to state 93
    TILDE               shift, and go to state 94
    EX                  shift, and go to state 95
    AND                 shift, and go to state 96

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 196
    statement                  go to state 356
    labeled_statement          go to state 198
    compound_statement         go to state 199
    expression_statement       go to state 202
    expression_opt             go to state 203
    selection_statement        go to state 204
    iteration_statement        go to state 205
    jump_statement             go to state 206
    primary_expression         go to state 98
    constant                   go to state 99
    postfix_expression         go to state 100
    unary_expression           go to state 101
    unary_operator             go to state 102
    cast_expression            go to state 103
    multiplicative_expression  go to state 104
    additive_expression        go to state 105
    shift_expression           go to state 106
    relational_expression      go to state 107
    equality_expression        go to state 108
    and_expression             go to state 109
    exclusive_or_expression    go to state 110
    inclusive_or_expression    go to state 111
    logical_and_expression     go to state 112
    logical_or_expression      go to state 113
    conditional_expression     go to state 114
    assignment_expression      go to state 137
    expression                 go to state 208


state 355

   34 iteration_statement: FOR PARAN_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement .

    $default  reduce using rule 34 (iteration_statement)


state 356

   35 iteration_statement: FOR PARAN_OPEN declaration SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement .

    $default  reduce using rule 35 (iteration_statement)
