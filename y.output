Terminals unused in grammar

   KEYWORD
   SIGN
   SINGLE_LINE_COMMENT
   MULTI_LINE_COMMENT
   RIGHT
   UMINUS
   UPLUS
   USTAR


Rules useless in parser due to conflicts

   78 identifier_opt: IDENTIFIER


State 27 conflicts: 21 shift/reduce
State 28 conflicts: 21 shift/reduce
State 30 conflicts: 21 shift/reduce
State 31 conflicts: 21 shift/reduce
State 32 conflicts: 1 reduce/reduce
State 38 conflicts: 2 reduce/reduce
State 42 conflicts: 21 shift/reduce
State 62 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 94 conflicts: 3 shift/reduce
State 98 conflicts: 1 shift/reduce
State 99 conflicts: 2 shift/reduce
State 103 conflicts: 1 shift/reduce
State 249 conflicts: 2 shift/reduce
State 250 conflicts: 2 shift/reduce
State 295 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration

    5 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

    6 declaration_list_opt: declaration_list
    7                     | epsilon

    8 epsilon: /* empty */

    9 declaration_list: declaration
   10                 | declaration_list declaration

   11 statement: labeled_statement
   12          | compound_statement
   13          | expression_statement
   14          | selection_statement
   15          | iteration_statement
   16          | jump_statement

   17 labeled_statement: IDENTIFIER COLON statement
   18                  | CASE constant_expression COLON statement
   19                  | DEFAULT COLON statement

   20 compound_statement: CURLY_OPEN block_item_list CURLY_CLOSE
   21                   | CURLY_OPEN CURLY_CLOSE

   22 block_item_list: block_item
   23                | block_item_list block_item

   24 block_item: statement
   25           | declaration

   26 expression_statement: expression_opt SEMI_COLON

   27 expression_opt: epsilon
   28               | expression

   29 selection_statement: IF PARAN_OPEN expression PARAN_CLOSE statement
   30                    | IF PARAN_OPEN expression PARAN_CLOSE statement ELSE statement
   31                    | SWITCH PARAN_CLOSE expression PARAN_CLOSE statement

   32 iteration_statement: WHILE PARAN_OPEN expression PARAN_CLOSE statement
   33                    | DO statement WHILE PARAN_OPEN expression PARAN_CLOSE SEMI_COLON
   34                    | FOR PARAN_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement
   35                    | FOR PARAN_OPEN declaration SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement

   36 jump_statement: GOTO IDENTIFIER SEMI_COLON
   37               | CONTINUE SEMI_COLON
   38               | BREAK SEMI_COLON
   39               | RETURN expression_opt SEMI_COLON

   40 constant_expression: /* empty */

   41 declaration: declaration_specifiers init_declarator_list_opt

   42 declaration_specifiers_opt: epsilon
   43                           | declaration_specifiers

   44 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   45                       | type_specifier declaration_specifiers_opt
   46                       | type_qualifier declaration_specifiers_opt
   47                       | function_specifier declaration_specifiers_opt

   48 init_declarator_list_opt: epsilon
   49                         | init_declarator_list

   50 init_declarator_list: init_declarator
   51                     | init_declarator_list COMMA init_declarator

   52 init_declarator: declarator
   53                | declarator EQUAL initializer

   54 storage_class_specifier: EXTERN
   55                        | STATIC
   56                        | AUTO
   57                        | REGISTER

   58 type_specifier: VOID
   59               | CHAR
   60               | SHORT
   61               | INT
   62               | LONG
   63               | FLOAT
   64               | DOUBLE
   65               | SIGNED
   66               | UNSIGNED
   67               | _BOOL
   68               | _COMPLEX
   69               | _IMAGINARY
   70               | enum_specifier

   71 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
   72                         | type_qualifier specifier_qualifier_list_opt

   73 specifier_qualifier_list_opt: epsilon
   74                             | specifier_qualifier_list

   75 enum_specifier: ENUM identifier_opt CURLY_OPEN enumerator_list CURLY_CLOSE
   76               | ENUM identifier_opt CURLY_OPEN enumerator_list COMMA CURLY_CLOSE
   77               | ENUM IDENTIFIER

   78 identifier_opt: IDENTIFIER
   79               | epsilon

   80 enumerator_list: enumerator
   81                | enumerator_list COMMA enumerator

   82 enumerator: enumeration_constant
   83           | enumeration_constant EQUAL constant_expression

   84 enumeration_constant: IDENTIFIER

   85 type_qualifier: CONST
   86               | RESTRICT
   87               | VOLATILE

   88 function_specifier: INLINE

   89 declarator: pointer_opt direct_declarator

   90 pointer_opt: epsilon
   91            | pointer

   92 direct_declarator: IDENTIFIER
   93                  | PARAN_OPEN declarator PARAN_CLOSE
   94                  | direct_declarator SQ_OPEN type_qualifier_list_opt assignment_expression_opt SQ_CLOSE
   95                  | direct_declarator SQ_OPEN STATIC type_qualifier_list_opt assignment_expression SQ_CLOSE
   96                  | direct_declarator SQ_OPEN type_qualifier_list STATIC assignment_expression SQ_CLOSE
   97                  | direct_declarator SQ_OPEN type_qualifier_list_opt STAR SQ_CLOSE
   98                  | direct_declarator PARAN_OPEN param_or_identi PARAN_CLOSE

   99 param_or_identi: parameter_type_list
  100                | identifier_list_opt

  101 type_qualifier_list_opt: epsilon
  102                        | type_qualifier_list

  103 assignment_expression_opt: epsilon
  104                          | assignment_expression

  105 identifier_list_opt: epsilon
  106                    | identifier_list

  107 pointer: STAR type_qualifier_list_opt
  108        | STAR type_qualifier_list_opt pointer

  109 type_qualifier_list: type_qualifier
  110                    | type_qualifier_list type_qualifier

  111 parameter_type_list: parameter_list
  112                    | parameter_list COMMA ELIPSIS

  113 parameter_list: parameter_declaration
  114               | parameter_list COMMA parameter_declaration

  115 parameter_declaration: declaration_specifiers declarator
  116                      | declaration_specifiers

  117 identifier_list: IDENTIFIER
  118                | identifier_list COMMA IDENTIFIER

  119 type_name: specifier_qualifier_list

  120 initializer: assignment_expression
  121            | CURLY_OPEN initializer_list CURLY_CLOSE
  122            | CURLY_OPEN initializer_list COMMA CURLY_CLOSE

  123 initializer_list: designation_opt initializer
  124                 | initializer_list COMMA designation_opt initializer

  125 designation_opt: epsilon
  126                | designation

  127 designation: designator_list EQUAL

  128 designator_list: designator
  129                | designator_list designator

  130 designator: SQ_OPEN constant_expression SQ_CLOSE
  131           | DOT IDENTIFIER

  132 primary_expression: IDENTIFIER
  133                   | constant
  134                   | STRING_LITERAL
  135                   | PARAN_OPEN expression PARAN_CLOSE

  136 constant: INTEGER_CONSTANT
  137         | FLOATING_CONSTANT
  138         | CHARACTER_CONSTANT

  139 postfix_expression: primary_expression
  140                   | postfix_expression SQ_OPEN expression SQ_CLOSE
  141                   | postfix_expression PARAN_OPEN argument_expression_list_opt PARAN_CLOSE
  142                   | postfix_expression DOT IDENTIFIER
  143                   | postfix_expression DEREF IDENTIFIER
  144                   | postfix_expression INC
  145                   | postfix_expression DEC
  146                   | PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE
  147                   | PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE

  148 argument_expression_list_opt: epsilon
  149                             | argument_expression_list

  150 argument_expression_list: assignment_expression
  151                         | argument_expression_list COMMA assignment_expression

  152 unary_expression: postfix_expression
  153                 | INC unary_expression
  154                 | DEC unary_expression
  155                 | unary_operator cast_expression
  156                 | SIZEOF unary_expression
  157                 | SIZEOF PARAN_OPEN type_name PARAN_CLOSE

  158 unary_operator: AND
  159               | STAR
  160               | PLUS
  161               | MINUS
  162               | TILDE
  163               | EX

  164 cast_expression: unary_expression
  165                | PARAN_OPEN type_name PARAN_CLOSE cast_expression

  166 multiplicative_expression: cast_expression
  167                          | multiplicative_expression STAR cast_expression
  168                          | multiplicative_expression BY cast_expression
  169                          | multiplicative_expression MOD cast_expression

  170 additive_expression: multiplicative_expression
  171                    | additive_expression PLUS multiplicative_expression
  172                    | additive_expression MINUS multiplicative_expression

  173 shift_expression: additive_expression
  174                 | shift_expression SL additive_expression
  175                 | shift_expression SR additive_expression

  176 relational_expression: shift_expression
  177                      | relational_expression LT shift_expression
  178                      | relational_expression GT shift_expression
  179                      | relational_expression LTE shift_expression
  180                      | relational_expression GTE shift_expression

  181 equality_expression: relational_expression
  182                    | equality_expression E relational_expression
  183                    | equality_expression NE relational_expression

  184 and_expression: equality_expression
  185               | and_expression AND equality_expression

  186 exclusive_or_expression: and_expression
  187                        | exclusive_or_expression CAP equality_expression

  188 inclusive_or_expression: exclusive_or_expression
  189                        | inclusive_or_expression OR exclusive_or_expression

  190 logical_and_expression: inclusive_or_expression
  191                       | logical_and_expression ANDAND inclusive_or_expression

  192 logical_or_expression: logical_and_expression
  193                      | logical_or_expression OROR logical_and_expression

  194 conditional_expression: logical_or_expression
  195                       | logical_or_expression Q expression COLON conditional_expression

  196 assignment_expression: conditional_expression
  197                      | unary_expression assignment_operator assignment_expression

  198 assignment_operator: EQUAL
  199                    | STAREQUAL
  200                    | BYEQUAL
  201                    | MODEQUAL
  202                    | PLUSEQUAL
  203                    | MINUSEQUAL
  204                    | SLEQUAL
  205                    | SREQUAL
  206                    | ANDEQUAL
  207                    | CAPEQUAL
  208                    | OREQUAL

  209 expression: assignment_expression
  210           | expression COMMA assignment_expression

  211 constant_expression: conditional_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
KEYWORD (258)
IDENTIFIER (259) 17 36 77 78 84 92 117 118 131 132 142 143
INTEGER_CONSTANT (260) 136
FLOATING_CONSTANT (261) 137
CHARACTER_CONSTANT (262) 138
STRING_LITERAL (263) 134
SIGN (264)
SINGLE_LINE_COMMENT (265)
MULTI_LINE_COMMENT (266)
COLON (267) 17 18 19 195
SEMI_COLON (268) 26 33 34 35 36 37 38 39
CASE (269) 18
DEFAULT (270) 19
CURLY_OPEN (271) 20 21 75 76 121 122 146 147
CURLY_CLOSE (272) 20 21 75 76 121 122 146 147
PARAN_OPEN (273) 29 30 32 33 34 35 93 98 135 141 146 147 157 165
PARAN_CLOSE (274) 29 30 31 32 33 34 35 93 98 135 141 146 147 157 165
SQ_OPEN (275) 94 95 96 97 130 140
SQ_CLOSE (276) 94 95 96 97 130 140
IF (277) 29 30
ELSE (278) 30
SWITCH (279) 31
FOR (280) 34 35
WHILE (281) 32 33
DO (282) 33
GOTO (283) 36
CONTINUE (284) 37
BREAK (285) 38
RETURN (286) 39
COMMA (287) 51 76 81 112 114 118 122 124 147 151 210
EQUAL (288) 53 83 127 198
EXTERN (289) 54
STATIC (290) 55 95 96
AUTO (291) 56
REGISTER (292) 57
VOID (293) 58
CHAR (294) 59
SHORT (295) 60
INT (296) 61
LONG (297) 62
FLOAT (298) 63
DOUBLE (299) 64
SIGNED (300) 65
UNSIGNED (301) 66
_BOOL (302) 67
_COMPLEX (303) 68
_IMAGINARY (304) 69
ENUM (305) 75 76 77
CONST (306) 85
RESTRICT (307) 86
VOLATILE (308) 87
INLINE (309) 88
STAR (310) 97 107 108 159 167
ELIPSIS (311) 112
DOT (312) 131 142
DEREF (313) 143
INC (314) 144 153
DEC (315) 145 154
SIZEOF (316) 156 157
PLUS (317) 160 171
MINUS (318) 161 172
TILDE (319) 162
EX (320) 163
AND (321) 158 185
OR (322) 189
BY (323) 168
MOD (324) 169
SL (325) 174
SR (326) 175
LT (327) 177
GT (328) 178
LTE (329) 179
GTE (330) 180
E (331) 182
NE (332) 183
CAP (333) 187
Q (334) 195
ANDAND (335) 191
OROR (336) 193
STAREQUAL (337) 199
BYEQUAL (338) 200
MODEQUAL (339) 201
PLUSEQUAL (340) 202
MINUSEQUAL (341) 203
SLEQUAL (342) 204
SREQUAL (343) 205
ANDEQUAL (344) 206
CAPEQUAL (345) 207
OREQUAL (346) 208
LOWER_THAN_ELSE (347)
RIGHT (348)
UMINUS (349)
UPLUS (350)
USTAR (351)
U (352)


Nonterminals, with rules where they appear

$accept (98)
    on left: 0
translation_unit (99)
    on left: 1 2, on right: 0 2
external_declaration (100)
    on left: 3 4, on right: 1 2
function_definition (101)
    on left: 5, on right: 3
declaration_list_opt (102)
    on left: 6 7, on right: 5
epsilon (103)
    on left: 8, on right: 7 27 42 48 73 79 90 101 103 105 125 148
declaration_list (104)
    on left: 9 10, on right: 6 10
statement (105)
    on left: 11 12 13 14 15 16, on right: 17 18 19 24 29 30 31 32 33
    34 35
labeled_statement (106)
    on left: 17 18 19, on right: 11
compound_statement (107)
    on left: 20 21, on right: 5 12
block_item_list (108)
    on left: 22 23, on right: 20 23
block_item (109)
    on left: 24 25, on right: 22 23
expression_statement (110)
    on left: 26, on right: 13
expression_opt (111)
    on left: 27 28, on right: 26 34 35 39
selection_statement (112)
    on left: 29 30 31, on right: 14
iteration_statement (113)
    on left: 32 33 34 35, on right: 15
jump_statement (114)
    on left: 36 37 38 39, on right: 16
constant_expression (115)
    on left: 40 211, on right: 18 83 130
declaration (116)
    on left: 41, on right: 4 9 10 25 35
declaration_specifiers_opt (117)
    on left: 42 43, on right: 44 45 46 47
declaration_specifiers (118)
    on left: 44 45 46 47, on right: 5 41 43 115 116
init_declarator_list_opt (119)
    on left: 48 49, on right: 41
init_declarator_list (120)
    on left: 50 51, on right: 49 51
init_declarator (121)
    on left: 52 53, on right: 50 51
storage_class_specifier (122)
    on left: 54 55 56 57, on right: 44
type_specifier (123)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70, on right: 45 71
specifier_qualifier_list (124)
    on left: 71 72, on right: 74 119
specifier_qualifier_list_opt (125)
    on left: 73 74, on right: 71 72
enum_specifier (126)
    on left: 75 76 77, on right: 70
identifier_opt (127)
    on left: 78 79, on right: 75 76
enumerator_list (128)
    on left: 80 81, on right: 75 76 81
enumerator (129)
    on left: 82 83, on right: 80 81
enumeration_constant (130)
    on left: 84, on right: 82 83
type_qualifier (131)
    on left: 85 86 87, on right: 46 72 109 110
function_specifier (132)
    on left: 88, on right: 47
declarator (133)
    on left: 89, on right: 5 52 53 93 115
pointer_opt (134)
    on left: 90 91, on right: 89
direct_declarator (135)
    on left: 92 93 94 95 96 97 98, on right: 89 94 95 96 97 98
param_or_identi (136)
    on left: 99 100, on right: 98
type_qualifier_list_opt (137)
    on left: 101 102, on right: 94 95 97 107 108
assignment_expression_opt (138)
    on left: 103 104, on right: 94
identifier_list_opt (139)
    on left: 105 106, on right: 100
pointer (140)
    on left: 107 108, on right: 91 108
type_qualifier_list (141)
    on left: 109 110, on right: 96 102 110
parameter_type_list (142)
    on left: 111 112, on right: 99
parameter_list (143)
    on left: 113 114, on right: 111 112 114
parameter_declaration (144)
    on left: 115 116, on right: 113 114
identifier_list (145)
    on left: 117 118, on right: 106 118
type_name (146)
    on left: 119, on right: 146 147 157 165
initializer (147)
    on left: 120 121 122, on right: 53 123 124
initializer_list (148)
    on left: 123 124, on right: 121 122 124 146 147
designation_opt (149)
    on left: 125 126, on right: 123 124
designation (150)
    on left: 127, on right: 126
designator_list (151)
    on left: 128 129, on right: 127 129
designator (152)
    on left: 130 131, on right: 128 129
primary_expression (153)
    on left: 132 133 134 135, on right: 139
constant (154)
    on left: 136 137 138, on right: 133
postfix_expression (155)
    on left: 139 140 141 142 143 144 145 146 147, on right: 140 141
    142 143 144 145 152
argument_expression_list_opt (156)
    on left: 148 149, on right: 141
argument_expression_list (157)
    on left: 150 151, on right: 149 151
unary_expression (158)
    on left: 152 153 154 155 156 157, on right: 153 154 156 164 197
unary_operator (159)
    on left: 158 159 160 161 162 163, on right: 155
cast_expression (160)
    on left: 164 165, on right: 155 165 166 167 168 169
multiplicative_expression (161)
    on left: 166 167 168 169, on right: 167 168 169 170 171 172
additive_expression (162)
    on left: 170 171 172, on right: 171 172 173 174 175
shift_expression (163)
    on left: 173 174 175, on right: 174 175 176 177 178 179 180
relational_expression (164)
    on left: 176 177 178 179 180, on right: 177 178 179 180 181 182
    183
equality_expression (165)
    on left: 181 182 183, on right: 182 183 184 185 187
and_expression (166)
    on left: 184 185, on right: 185 186
exclusive_or_expression (167)
    on left: 186 187, on right: 187 188 189
inclusive_or_expression (168)
    on left: 188 189, on right: 189 190 191
logical_and_expression (169)
    on left: 190 191, on right: 191 192 193
logical_or_expression (170)
    on left: 192 193, on right: 193 194 195
conditional_expression (171)
    on left: 194 195, on right: 195 196 211
assignment_expression (172)
    on left: 196 197, on right: 95 96 104 120 150 151 197 209 210
assignment_operator (173)
    on left: 198 199 200 201 202 203 204 205 206 207 208, on right:
    197
expression (174)
    on left: 209 210, on right: 28 29 30 31 32 33 135 140 195 210


state 0

    0 $accept: . translation_unit $end

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    translation_unit         go to state 22
    external_declaration     go to state 23
    function_definition      go to state 24
    declaration              go to state 25
    declaration_specifiers   go to state 26
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


state 1

   54 storage_class_specifier: EXTERN .

    $default  reduce using rule 54 (storage_class_specifier)


state 2

   55 storage_class_specifier: STATIC .

    $default  reduce using rule 55 (storage_class_specifier)


state 3

   56 storage_class_specifier: AUTO .

    $default  reduce using rule 56 (storage_class_specifier)


state 4

   57 storage_class_specifier: REGISTER .

    $default  reduce using rule 57 (storage_class_specifier)


state 5

   58 type_specifier: VOID .

    $default  reduce using rule 58 (type_specifier)


state 6

   59 type_specifier: CHAR .

    $default  reduce using rule 59 (type_specifier)


state 7

   60 type_specifier: SHORT .

    $default  reduce using rule 60 (type_specifier)


state 8

   61 type_specifier: INT .

    $default  reduce using rule 61 (type_specifier)


state 9

   62 type_specifier: LONG .

    $default  reduce using rule 62 (type_specifier)


state 10

   63 type_specifier: FLOAT .

    $default  reduce using rule 63 (type_specifier)


state 11

   64 type_specifier: DOUBLE .

    $default  reduce using rule 64 (type_specifier)


state 12

   65 type_specifier: SIGNED .

    $default  reduce using rule 65 (type_specifier)


state 13

   66 type_specifier: UNSIGNED .

    $default  reduce using rule 66 (type_specifier)


state 14

   67 type_specifier: _BOOL .

    $default  reduce using rule 67 (type_specifier)


state 15

   68 type_specifier: _COMPLEX .

    $default  reduce using rule 68 (type_specifier)


state 16

   69 type_specifier: _IMAGINARY .

    $default  reduce using rule 69 (type_specifier)


state 17

   75 enum_specifier: ENUM . identifier_opt CURLY_OPEN enumerator_list CURLY_CLOSE
   76               | ENUM . identifier_opt CURLY_OPEN enumerator_list COMMA CURLY_CLOSE
   77               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 8 (epsilon)

    epsilon         go to state 33
    identifier_opt  go to state 34


state 18

   85 type_qualifier: CONST .

    $default  reduce using rule 85 (type_qualifier)


state 19

   86 type_qualifier: RESTRICT .

    $default  reduce using rule 86 (type_qualifier)


state 20

   87 type_qualifier: VOLATILE .

    $default  reduce using rule 87 (type_qualifier)


state 21

   88 function_specifier: INLINE .

    $default  reduce using rule 88 (function_specifier)


state 22

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 35
    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    external_declaration     go to state 36
    function_definition      go to state 24
    declaration              go to state 25
    declaration_specifiers   go to state 26
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


state 23

    1 translation_unit: external_declaration .

    $default  reduce using rule 1 (translation_unit)


state 24

    3 external_declaration: function_definition .

    $default  reduce using rule 3 (external_declaration)


state 25

    4 external_declaration: declaration .

    $default  reduce using rule 4 (external_declaration)


state 26

    5 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement
   41 declaration: declaration_specifiers . init_declarator_list_opt

    STAR  shift, and go to state 37

    $default  reduce using rule 8 (epsilon)

    epsilon                   go to state 38
    init_declarator_list_opt  go to state 39
    init_declarator_list      go to state 40
    init_declarator           go to state 41
    declarator                go to state 42
    pointer_opt               go to state 43
    pointer                   go to state 44


state 27

   44 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    EXTERN      [reduce using rule 8 (epsilon)]
    STATIC      [reduce using rule 8 (epsilon)]
    AUTO        [reduce using rule 8 (epsilon)]
    REGISTER    [reduce using rule 8 (epsilon)]
    VOID        [reduce using rule 8 (epsilon)]
    CHAR        [reduce using rule 8 (epsilon)]
    SHORT       [reduce using rule 8 (epsilon)]
    INT         [reduce using rule 8 (epsilon)]
    LONG        [reduce using rule 8 (epsilon)]
    FLOAT       [reduce using rule 8 (epsilon)]
    DOUBLE      [reduce using rule 8 (epsilon)]
    SIGNED      [reduce using rule 8 (epsilon)]
    UNSIGNED    [reduce using rule 8 (epsilon)]
    _BOOL       [reduce using rule 8 (epsilon)]
    _COMPLEX    [reduce using rule 8 (epsilon)]
    _IMAGINARY  [reduce using rule 8 (epsilon)]
    ENUM        [reduce using rule 8 (epsilon)]
    CONST       [reduce using rule 8 (epsilon)]
    RESTRICT    [reduce using rule 8 (epsilon)]
    VOLATILE    [reduce using rule 8 (epsilon)]
    INLINE      [reduce using rule 8 (epsilon)]
    $default    reduce using rule 8 (epsilon)

    epsilon                     go to state 45
    declaration_specifiers_opt  go to state 46
    declaration_specifiers      go to state 47
    storage_class_specifier     go to state 27
    type_specifier              go to state 28
    enum_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31


state 28

   45 declaration_specifiers: type_specifier . declaration_specifiers_opt

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    EXTERN      [reduce using rule 8 (epsilon)]
    STATIC      [reduce using rule 8 (epsilon)]
    AUTO        [reduce using rule 8 (epsilon)]
    REGISTER    [reduce using rule 8 (epsilon)]
    VOID        [reduce using rule 8 (epsilon)]
    CHAR        [reduce using rule 8 (epsilon)]
    SHORT       [reduce using rule 8 (epsilon)]
    INT         [reduce using rule 8 (epsilon)]
    LONG        [reduce using rule 8 (epsilon)]
    FLOAT       [reduce using rule 8 (epsilon)]
    DOUBLE      [reduce using rule 8 (epsilon)]
    SIGNED      [reduce using rule 8 (epsilon)]
    UNSIGNED    [reduce using rule 8 (epsilon)]
    _BOOL       [reduce using rule 8 (epsilon)]
    _COMPLEX    [reduce using rule 8 (epsilon)]
    _IMAGINARY  [reduce using rule 8 (epsilon)]
    ENUM        [reduce using rule 8 (epsilon)]
    CONST       [reduce using rule 8 (epsilon)]
    RESTRICT    [reduce using rule 8 (epsilon)]
    VOLATILE    [reduce using rule 8 (epsilon)]
    INLINE      [reduce using rule 8 (epsilon)]
    $default    reduce using rule 8 (epsilon)

    epsilon                     go to state 45
    declaration_specifiers_opt  go to state 48
    declaration_specifiers      go to state 47
    storage_class_specifier     go to state 27
    type_specifier              go to state 28
    enum_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31


state 29

   70 type_specifier: enum_specifier .

    $default  reduce using rule 70 (type_specifier)


state 30

   46 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    EXTERN      [reduce using rule 8 (epsilon)]
    STATIC      [reduce using rule 8 (epsilon)]
    AUTO        [reduce using rule 8 (epsilon)]
    REGISTER    [reduce using rule 8 (epsilon)]
    VOID        [reduce using rule 8 (epsilon)]
    CHAR        [reduce using rule 8 (epsilon)]
    SHORT       [reduce using rule 8 (epsilon)]
    INT         [reduce using rule 8 (epsilon)]
    LONG        [reduce using rule 8 (epsilon)]
    FLOAT       [reduce using rule 8 (epsilon)]
    DOUBLE      [reduce using rule 8 (epsilon)]
    SIGNED      [reduce using rule 8 (epsilon)]
    UNSIGNED    [reduce using rule 8 (epsilon)]
    _BOOL       [reduce using rule 8 (epsilon)]
    _COMPLEX    [reduce using rule 8 (epsilon)]
    _IMAGINARY  [reduce using rule 8 (epsilon)]
    ENUM        [reduce using rule 8 (epsilon)]
    CONST       [reduce using rule 8 (epsilon)]
    RESTRICT    [reduce using rule 8 (epsilon)]
    VOLATILE    [reduce using rule 8 (epsilon)]
    INLINE      [reduce using rule 8 (epsilon)]
    $default    reduce using rule 8 (epsilon)

    epsilon                     go to state 45
    declaration_specifiers_opt  go to state 49
    declaration_specifiers      go to state 47
    storage_class_specifier     go to state 27
    type_specifier              go to state 28
    enum_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31


state 31

   47 declaration_specifiers: function_specifier . declaration_specifiers_opt

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    EXTERN      [reduce using rule 8 (epsilon)]
    STATIC      [reduce using rule 8 (epsilon)]
    AUTO        [reduce using rule 8 (epsilon)]
    REGISTER    [reduce using rule 8 (epsilon)]
    VOID        [reduce using rule 8 (epsilon)]
    CHAR        [reduce using rule 8 (epsilon)]
    SHORT       [reduce using rule 8 (epsilon)]
    INT         [reduce using rule 8 (epsilon)]
    LONG        [reduce using rule 8 (epsilon)]
    FLOAT       [reduce using rule 8 (epsilon)]
    DOUBLE      [reduce using rule 8 (epsilon)]
    SIGNED      [reduce using rule 8 (epsilon)]
    UNSIGNED    [reduce using rule 8 (epsilon)]
    _BOOL       [reduce using rule 8 (epsilon)]
    _COMPLEX    [reduce using rule 8 (epsilon)]
    _IMAGINARY  [reduce using rule 8 (epsilon)]
    ENUM        [reduce using rule 8 (epsilon)]
    CONST       [reduce using rule 8 (epsilon)]
    RESTRICT    [reduce using rule 8 (epsilon)]
    VOLATILE    [reduce using rule 8 (epsilon)]
    INLINE      [reduce using rule 8 (epsilon)]
    $default    reduce using rule 8 (epsilon)

    epsilon                     go to state 45
    declaration_specifiers_opt  go to state 50
    declaration_specifiers      go to state 47
    storage_class_specifier     go to state 27
    type_specifier              go to state 28
    enum_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31


state 32

   77 enum_specifier: ENUM IDENTIFIER .
   78 identifier_opt: IDENTIFIER .

    CURLY_OPEN  reduce using rule 77 (enum_specifier)
    CURLY_OPEN  [reduce using rule 78 (identifier_opt)]
    $default    reduce using rule 77 (enum_specifier)


state 33

   79 identifier_opt: epsilon .

    $default  reduce using rule 79 (identifier_opt)


state 34

   75 enum_specifier: ENUM identifier_opt . CURLY_OPEN enumerator_list CURLY_CLOSE
   76               | ENUM identifier_opt . CURLY_OPEN enumerator_list COMMA CURLY_CLOSE

    CURLY_OPEN  shift, and go to state 51


state 35

    0 $accept: translation_unit $end .

    $default  accept


state 36

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 37

  107 pointer: STAR . type_qualifier_list_opt
  108        | STAR . type_qualifier_list_opt pointer

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 8 (epsilon)

    epsilon                  go to state 52
    type_qualifier           go to state 53
    type_qualifier_list_opt  go to state 54
    type_qualifier_list      go to state 55


state 38

   48 init_declarator_list_opt: epsilon .
   90 pointer_opt: epsilon .

    IDENTIFIER  reduce using rule 48 (init_declarator_list_opt)
    IDENTIFIER  [reduce using rule 90 (pointer_opt)]
    PARAN_OPEN  reduce using rule 48 (init_declarator_list_opt)
    PARAN_OPEN  [reduce using rule 90 (pointer_opt)]
    $default    reduce using rule 48 (init_declarator_list_opt)


state 39

   41 declaration: declaration_specifiers init_declarator_list_opt .

    $default  reduce using rule 41 (declaration)


state 40

   49 init_declarator_list_opt: init_declarator_list .
   51 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA  shift, and go to state 56

    $default  reduce using rule 49 (init_declarator_list_opt)


state 41

   50 init_declarator_list: init_declarator .

    $default  reduce using rule 50 (init_declarator_list)


state 42

    5 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement
   52 init_declarator: declarator .
   53                | declarator . EQUAL initializer

    EQUAL       shift, and go to state 57
    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    CURLY_OPEN  reduce using rule 8 (epsilon)
    EXTERN      [reduce using rule 52 (init_declarator)]
    STATIC      [reduce using rule 52 (init_declarator)]
    AUTO        [reduce using rule 52 (init_declarator)]
    REGISTER    [reduce using rule 52 (init_declarator)]
    VOID        [reduce using rule 52 (init_declarator)]
    CHAR        [reduce using rule 52 (init_declarator)]
    SHORT       [reduce using rule 52 (init_declarator)]
    INT         [reduce using rule 52 (init_declarator)]
    LONG        [reduce using rule 52 (init_declarator)]
    FLOAT       [reduce using rule 52 (init_declarator)]
    DOUBLE      [reduce using rule 52 (init_declarator)]
    SIGNED      [reduce using rule 52 (init_declarator)]
    UNSIGNED    [reduce using rule 52 (init_declarator)]
    _BOOL       [reduce using rule 52 (init_declarator)]
    _COMPLEX    [reduce using rule 52 (init_declarator)]
    _IMAGINARY  [reduce using rule 52 (init_declarator)]
    ENUM        [reduce using rule 52 (init_declarator)]
    CONST       [reduce using rule 52 (init_declarator)]
    RESTRICT    [reduce using rule 52 (init_declarator)]
    VOLATILE    [reduce using rule 52 (init_declarator)]
    INLINE      [reduce using rule 52 (init_declarator)]
    $default    reduce using rule 52 (init_declarator)

    declaration_list_opt     go to state 58
    epsilon                  go to state 59
    declaration_list         go to state 60
    declaration              go to state 61
    declaration_specifiers   go to state 62
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


state 43

   89 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 63
    PARAN_OPEN  shift, and go to state 64

    direct_declarator  go to state 65


state 44

   91 pointer_opt: pointer .

    $default  reduce using rule 91 (pointer_opt)


state 45

   42 declaration_specifiers_opt: epsilon .

    $default  reduce using rule 42 (declaration_specifiers_opt)


state 46

   44 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 44 (declaration_specifiers)


state 47

   43 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 43 (declaration_specifiers_opt)


state 48

   45 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 45 (declaration_specifiers)


state 49

   46 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 46 (declaration_specifiers)


state 50

   47 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 47 (declaration_specifiers)


state 51

   75 enum_specifier: ENUM identifier_opt CURLY_OPEN . enumerator_list CURLY_CLOSE
   76               | ENUM identifier_opt CURLY_OPEN . enumerator_list COMMA CURLY_CLOSE

    IDENTIFIER  shift, and go to state 66

    enumerator_list       go to state 67
    enumerator            go to state 68
    enumeration_constant  go to state 69


state 52

  101 type_qualifier_list_opt: epsilon .

    $default  reduce using rule 101 (type_qualifier_list_opt)


state 53

  109 type_qualifier_list: type_qualifier .

    $default  reduce using rule 109 (type_qualifier_list)


state 54

  107 pointer: STAR type_qualifier_list_opt .
  108        | STAR type_qualifier_list_opt . pointer

    STAR  shift, and go to state 37

    $default  reduce using rule 107 (pointer)

    pointer  go to state 70


state 55

  102 type_qualifier_list_opt: type_qualifier_list .
  110 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 102 (type_qualifier_list_opt)

    type_qualifier  go to state 71


state 56

   51 init_declarator_list: init_declarator_list COMMA . init_declarator

    STAR  shift, and go to state 37

    $default  reduce using rule 8 (epsilon)

    epsilon          go to state 72
    init_declarator  go to state 73
    declarator       go to state 74
    pointer_opt      go to state 43
    pointer          go to state 44


state 57

   53 init_declarator: declarator EQUAL . initializer

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CURLY_OPEN          shift, and go to state 80
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    initializer                go to state 91
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 109


state 58

    5 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement

    CURLY_OPEN  shift, and go to state 110

    compound_statement  go to state 111


state 59

    7 declaration_list_opt: epsilon .

    $default  reduce using rule 7 (declaration_list_opt)


state 60

    6 declaration_list_opt: declaration_list .
   10 declaration_list: declaration_list . declaration

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    $default  reduce using rule 6 (declaration_list_opt)

    declaration              go to state 112
    declaration_specifiers   go to state 62
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


state 61

    9 declaration_list: declaration .

    $default  reduce using rule 9 (declaration_list)


state 62

   41 declaration: declaration_specifiers . init_declarator_list_opt

    STAR  shift, and go to state 37

    STAR      [reduce using rule 8 (epsilon)]
    $default  reduce using rule 8 (epsilon)

    epsilon                   go to state 38
    init_declarator_list_opt  go to state 39
    init_declarator_list      go to state 40
    init_declarator           go to state 41
    declarator                go to state 74
    pointer_opt               go to state 43
    pointer                   go to state 44


state 63

   92 direct_declarator: IDENTIFIER .

    $default  reduce using rule 92 (direct_declarator)


state 64

   93 direct_declarator: PARAN_OPEN . declarator PARAN_CLOSE

    STAR  shift, and go to state 37

    $default  reduce using rule 8 (epsilon)

    epsilon      go to state 72
    declarator   go to state 113
    pointer_opt  go to state 43
    pointer      go to state 44


state 65

   89 declarator: pointer_opt direct_declarator .
   94 direct_declarator: direct_declarator . SQ_OPEN type_qualifier_list_opt assignment_expression_opt SQ_CLOSE
   95                  | direct_declarator . SQ_OPEN STATIC type_qualifier_list_opt assignment_expression SQ_CLOSE
   96                  | direct_declarator . SQ_OPEN type_qualifier_list STATIC assignment_expression SQ_CLOSE
   97                  | direct_declarator . SQ_OPEN type_qualifier_list_opt STAR SQ_CLOSE
   98                  | direct_declarator . PARAN_OPEN param_or_identi PARAN_CLOSE

    PARAN_OPEN  shift, and go to state 114
    SQ_OPEN     shift, and go to state 115

    PARAN_OPEN  [reduce using rule 89 (declarator)]
    $default    reduce using rule 89 (declarator)


state 66

   84 enumeration_constant: IDENTIFIER .

    $default  reduce using rule 84 (enumeration_constant)


state 67

   75 enum_specifier: ENUM identifier_opt CURLY_OPEN enumerator_list . CURLY_CLOSE
   76               | ENUM identifier_opt CURLY_OPEN enumerator_list . COMMA CURLY_CLOSE
   81 enumerator_list: enumerator_list . COMMA enumerator

    CURLY_CLOSE  shift, and go to state 116
    COMMA        shift, and go to state 117


state 68

   80 enumerator_list: enumerator .

    $default  reduce using rule 80 (enumerator_list)


state 69

   82 enumerator: enumeration_constant .
   83           | enumeration_constant . EQUAL constant_expression

    EQUAL  shift, and go to state 118

    $default  reduce using rule 82 (enumerator)


state 70

  108 pointer: STAR type_qualifier_list_opt pointer .

    $default  reduce using rule 108 (pointer)


state 71

  110 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 110 (type_qualifier_list)


state 72

   90 pointer_opt: epsilon .

    $default  reduce using rule 90 (pointer_opt)


state 73

   51 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 51 (init_declarator_list)


state 74

   52 init_declarator: declarator .
   53                | declarator . EQUAL initializer

    EQUAL  shift, and go to state 57

    $default  reduce using rule 52 (init_declarator)


state 75

  132 primary_expression: IDENTIFIER .

    $default  reduce using rule 132 (primary_expression)


state 76

  136 constant: INTEGER_CONSTANT .

    $default  reduce using rule 136 (constant)


state 77

  137 constant: FLOATING_CONSTANT .

    $default  reduce using rule 137 (constant)


state 78

  138 constant: CHARACTER_CONSTANT .

    $default  reduce using rule 138 (constant)


state 79

  134 primary_expression: STRING_LITERAL .

    $default  reduce using rule 134 (primary_expression)


state 80

  121 initializer: CURLY_OPEN . initializer_list CURLY_CLOSE
  122            | CURLY_OPEN . initializer_list COMMA CURLY_CLOSE

    SQ_OPEN  shift, and go to state 119
    DOT      shift, and go to state 120

    $default  reduce using rule 8 (epsilon)

    epsilon           go to state 121
    initializer_list  go to state 122
    designation_opt   go to state 123
    designation       go to state 124
    designator_list   go to state 125
    designator        go to state 126


state 81

  135 primary_expression: PARAN_OPEN . expression PARAN_CLOSE
  146 postfix_expression: PARAN_OPEN . type_name PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE
  147                   | PARAN_OPEN . type_name PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE
  165 cast_expression: PARAN_OPEN . type_name PARAN_CLOSE cast_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    VOID                shift, and go to state 5
    CHAR                shift, and go to state 6
    SHORT               shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    FLOAT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    SIGNED              shift, and go to state 12
    UNSIGNED            shift, and go to state 13
    _BOOL               shift, and go to state 14
    _COMPLEX            shift, and go to state 15
    _IMAGINARY          shift, and go to state 16
    ENUM                shift, and go to state 17
    CONST               shift, and go to state 18
    RESTRICT            shift, and go to state 19
    VOLATILE            shift, and go to state 20
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    type_specifier             go to state 127
    specifier_qualifier_list   go to state 128
    enum_specifier             go to state 29
    type_qualifier             go to state 129
    type_name                  go to state 130
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 132


state 82

  159 unary_operator: STAR .

    $default  reduce using rule 159 (unary_operator)


state 83

  153 unary_expression: INC . unary_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 133
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression  go to state 92
    constant            go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 134
    unary_operator      go to state 96


state 84

  154 unary_expression: DEC . unary_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 133
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression  go to state 92
    constant            go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 135
    unary_operator      go to state 96


state 85

  156 unary_expression: SIZEOF . unary_expression
  157                 | SIZEOF . PARAN_OPEN type_name PARAN_CLOSE

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 136
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression  go to state 92
    constant            go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 137
    unary_operator      go to state 96


state 86

  160 unary_operator: PLUS .

    $default  reduce using rule 160 (unary_operator)


state 87

  161 unary_operator: MINUS .

    $default  reduce using rule 161 (unary_operator)


state 88

  162 unary_operator: TILDE .

    $default  reduce using rule 162 (unary_operator)


state 89

  163 unary_operator: EX .

    $default  reduce using rule 163 (unary_operator)


state 90

  158 unary_operator: AND .

    $default  reduce using rule 158 (unary_operator)


state 91

   53 init_declarator: declarator EQUAL initializer .

    $default  reduce using rule 53 (init_declarator)


state 92

  139 postfix_expression: primary_expression .

    $default  reduce using rule 139 (postfix_expression)


state 93

  133 primary_expression: constant .

    $default  reduce using rule 133 (primary_expression)


state 94

  140 postfix_expression: postfix_expression . SQ_OPEN expression SQ_CLOSE
  141                   | postfix_expression . PARAN_OPEN argument_expression_list_opt PARAN_CLOSE
  142                   | postfix_expression . DOT IDENTIFIER
  143                   | postfix_expression . DEREF IDENTIFIER
  144                   | postfix_expression . INC
  145                   | postfix_expression . DEC
  152 unary_expression: postfix_expression .

    PARAN_OPEN  shift, and go to state 138
    SQ_OPEN     shift, and go to state 139
    DOT         shift, and go to state 140
    DEREF       shift, and go to state 141
    INC         shift, and go to state 142
    DEC         shift, and go to state 143

    PARAN_OPEN  [reduce using rule 152 (unary_expression)]
    INC         [reduce using rule 152 (unary_expression)]
    DEC         [reduce using rule 152 (unary_expression)]
    $default    reduce using rule 152 (unary_expression)


state 95

  164 cast_expression: unary_expression .
  197 assignment_expression: unary_expression . assignment_operator assignment_expression

    EQUAL       shift, and go to state 144
    STAREQUAL   shift, and go to state 145
    BYEQUAL     shift, and go to state 146
    MODEQUAL    shift, and go to state 147
    PLUSEQUAL   shift, and go to state 148
    MINUSEQUAL  shift, and go to state 149
    SLEQUAL     shift, and go to state 150
    SREQUAL     shift, and go to state 151
    ANDEQUAL    shift, and go to state 152
    CAPEQUAL    shift, and go to state 153
    OREQUAL     shift, and go to state 154

    $default  reduce using rule 164 (cast_expression)

    assignment_operator  go to state 155


state 96

  155 unary_expression: unary_operator . cast_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression  go to state 92
    constant            go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 156
    unary_operator      go to state 96
    cast_expression     go to state 157


state 97

  166 multiplicative_expression: cast_expression .

    $default  reduce using rule 166 (multiplicative_expression)


state 98

  167 multiplicative_expression: multiplicative_expression . STAR cast_expression
  168                          | multiplicative_expression . BY cast_expression
  169                          | multiplicative_expression . MOD cast_expression
  170 additive_expression: multiplicative_expression .

    STAR  shift, and go to state 158
    BY    shift, and go to state 159
    MOD   shift, and go to state 160

    STAR      [reduce using rule 170 (additive_expression)]
    $default  reduce using rule 170 (additive_expression)


state 99

  171 additive_expression: additive_expression . PLUS multiplicative_expression
  172                    | additive_expression . MINUS multiplicative_expression
  173 shift_expression: additive_expression .

    PLUS   shift, and go to state 161
    MINUS  shift, and go to state 162

    PLUS      [reduce using rule 173 (shift_expression)]
    MINUS     [reduce using rule 173 (shift_expression)]
    $default  reduce using rule 173 (shift_expression)


state 100

  174 shift_expression: shift_expression . SL additive_expression
  175                 | shift_expression . SR additive_expression
  176 relational_expression: shift_expression .

    SL  shift, and go to state 163
    SR  shift, and go to state 164

    $default  reduce using rule 176 (relational_expression)


state 101

  177 relational_expression: relational_expression . LT shift_expression
  178                      | relational_expression . GT shift_expression
  179                      | relational_expression . LTE shift_expression
  180                      | relational_expression . GTE shift_expression
  181 equality_expression: relational_expression .

    LT   shift, and go to state 165
    GT   shift, and go to state 166
    LTE  shift, and go to state 167
    GTE  shift, and go to state 168

    $default  reduce using rule 181 (equality_expression)


state 102

  182 equality_expression: equality_expression . E relational_expression
  183                    | equality_expression . NE relational_expression
  184 and_expression: equality_expression .

    E   shift, and go to state 169
    NE  shift, and go to state 170

    $default  reduce using rule 184 (and_expression)


state 103

  185 and_expression: and_expression . AND equality_expression
  186 exclusive_or_expression: and_expression .

    AND  shift, and go to state 171

    AND       [reduce using rule 186 (exclusive_or_expression)]
    $default  reduce using rule 186 (exclusive_or_expression)


state 104

  187 exclusive_or_expression: exclusive_or_expression . CAP equality_expression
  188 inclusive_or_expression: exclusive_or_expression .

    CAP  shift, and go to state 172

    $default  reduce using rule 188 (inclusive_or_expression)


state 105

  189 inclusive_or_expression: inclusive_or_expression . OR exclusive_or_expression
  190 logical_and_expression: inclusive_or_expression .

    OR  shift, and go to state 173

    $default  reduce using rule 190 (logical_and_expression)


state 106

  191 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  192 logical_or_expression: logical_and_expression .

    ANDAND  shift, and go to state 174

    $default  reduce using rule 192 (logical_or_expression)


state 107

  193 logical_or_expression: logical_or_expression . OROR logical_and_expression
  194 conditional_expression: logical_or_expression .
  195                       | logical_or_expression . Q expression COLON conditional_expression

    Q     shift, and go to state 175
    OROR  shift, and go to state 176

    $default  reduce using rule 194 (conditional_expression)


state 108

  196 assignment_expression: conditional_expression .

    $default  reduce using rule 196 (assignment_expression)


state 109

  120 initializer: assignment_expression .

    $default  reduce using rule 120 (initializer)


state 110

   20 compound_statement: CURLY_OPEN . block_item_list CURLY_CLOSE
   21                   | CURLY_OPEN . CURLY_CLOSE

    IDENTIFIER          shift, and go to state 177
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CASE                shift, and go to state 178
    DEFAULT             shift, and go to state 179
    CURLY_OPEN          shift, and go to state 110
    CURLY_CLOSE         shift, and go to state 180
    PARAN_OPEN          shift, and go to state 81
    IF                  shift, and go to state 181
    SWITCH              shift, and go to state 182
    FOR                 shift, and go to state 183
    WHILE               shift, and go to state 184
    DO                  shift, and go to state 185
    GOTO                shift, and go to state 186
    CONTINUE            shift, and go to state 187
    BREAK               shift, and go to state 188
    RETURN              shift, and go to state 189
    EXTERN              shift, and go to state 1
    STATIC              shift, and go to state 2
    AUTO                shift, and go to state 3
    REGISTER            shift, and go to state 4
    VOID                shift, and go to state 5
    CHAR                shift, and go to state 6
    SHORT               shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    FLOAT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    SIGNED              shift, and go to state 12
    UNSIGNED            shift, and go to state 13
    _BOOL               shift, and go to state 14
    _COMPLEX            shift, and go to state 15
    _IMAGINARY          shift, and go to state 16
    ENUM                shift, and go to state 17
    CONST               shift, and go to state 18
    RESTRICT            shift, and go to state 19
    VOLATILE            shift, and go to state 20
    INLINE              shift, and go to state 21
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    statement                  go to state 191
    labeled_statement          go to state 192
    compound_statement         go to state 193
    block_item_list            go to state 194
    block_item                 go to state 195
    expression_statement       go to state 196
    expression_opt             go to state 197
    selection_statement        go to state 198
    iteration_statement        go to state 199
    jump_statement             go to state 200
    declaration                go to state 201
    declaration_specifiers     go to state 62
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    enum_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 111

    5 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 5 (function_definition)


state 112

   10 declaration_list: declaration_list declaration .

    $default  reduce using rule 10 (declaration_list)


state 113

   93 direct_declarator: PARAN_OPEN declarator . PARAN_CLOSE

    PARAN_CLOSE  shift, and go to state 203


state 114

   98 direct_declarator: direct_declarator PARAN_OPEN . param_or_identi PARAN_CLOSE

    IDENTIFIER  shift, and go to state 204
    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21

    $default  reduce using rule 8 (epsilon)

    epsilon                  go to state 205
    declaration_specifiers   go to state 206
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    param_or_identi          go to state 207
    identifier_list_opt      go to state 208
    parameter_type_list      go to state 209
    parameter_list           go to state 210
    parameter_declaration    go to state 211
    identifier_list          go to state 212


state 115

   94 direct_declarator: direct_declarator SQ_OPEN . type_qualifier_list_opt assignment_expression_opt SQ_CLOSE
   95                  | direct_declarator SQ_OPEN . STATIC type_qualifier_list_opt assignment_expression SQ_CLOSE
   96                  | direct_declarator SQ_OPEN . type_qualifier_list STATIC assignment_expression SQ_CLOSE
   97                  | direct_declarator SQ_OPEN . type_qualifier_list_opt STAR SQ_CLOSE

    STATIC    shift, and go to state 213
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 8 (epsilon)

    epsilon                  go to state 52
    type_qualifier           go to state 53
    type_qualifier_list_opt  go to state 214
    type_qualifier_list      go to state 215


state 116

   75 enum_specifier: ENUM identifier_opt CURLY_OPEN enumerator_list CURLY_CLOSE .

    $default  reduce using rule 75 (enum_specifier)


state 117

   76 enum_specifier: ENUM identifier_opt CURLY_OPEN enumerator_list COMMA . CURLY_CLOSE
   81 enumerator_list: enumerator_list COMMA . enumerator

    IDENTIFIER   shift, and go to state 66
    CURLY_CLOSE  shift, and go to state 216

    enumerator            go to state 217
    enumeration_constant  go to state 69


state 118

   83 enumerator: enumeration_constant EQUAL . constant_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 40 (constant_expression)

    constant_expression        go to state 218
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 219


state 119

  130 designator: SQ_OPEN . constant_expression SQ_CLOSE

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 40 (constant_expression)

    constant_expression        go to state 220
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 219


state 120

  131 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 221


state 121

  125 designation_opt: epsilon .

    $default  reduce using rule 125 (designation_opt)


state 122

  121 initializer: CURLY_OPEN initializer_list . CURLY_CLOSE
  122            | CURLY_OPEN initializer_list . COMMA CURLY_CLOSE
  124 initializer_list: initializer_list . COMMA designation_opt initializer

    CURLY_CLOSE  shift, and go to state 222
    COMMA        shift, and go to state 223


state 123

  123 initializer_list: designation_opt . initializer

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CURLY_OPEN          shift, and go to state 80
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    initializer                go to state 224
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 109


state 124

  126 designation_opt: designation .

    $default  reduce using rule 126 (designation_opt)


state 125

  127 designation: designator_list . EQUAL
  129 designator_list: designator_list . designator

    SQ_OPEN  shift, and go to state 119
    EQUAL    shift, and go to state 225
    DOT      shift, and go to state 120

    designator  go to state 226


state 126

  128 designator_list: designator .

    $default  reduce using rule 128 (designator_list)


state 127

   71 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20

    $default  reduce using rule 8 (epsilon)

    epsilon                       go to state 227
    type_specifier                go to state 127
    specifier_qualifier_list      go to state 228
    specifier_qualifier_list_opt  go to state 229
    enum_specifier                go to state 29
    type_qualifier                go to state 129


state 128

  119 type_name: specifier_qualifier_list .

    $default  reduce using rule 119 (type_name)


state 129

   72 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20

    $default  reduce using rule 8 (epsilon)

    epsilon                       go to state 227
    type_specifier                go to state 127
    specifier_qualifier_list      go to state 228
    specifier_qualifier_list_opt  go to state 230
    enum_specifier                go to state 29
    type_qualifier                go to state 129


state 130

  146 postfix_expression: PARAN_OPEN type_name . PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE
  147                   | PARAN_OPEN type_name . PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE
  165 cast_expression: PARAN_OPEN type_name . PARAN_CLOSE cast_expression

    PARAN_CLOSE  shift, and go to state 231


state 131

  209 expression: assignment_expression .

    $default  reduce using rule 209 (expression)


state 132

  135 primary_expression: PARAN_OPEN expression . PARAN_CLOSE
  210 expression: expression . COMMA assignment_expression

    PARAN_CLOSE  shift, and go to state 232
    COMMA        shift, and go to state 233


state 133

  135 primary_expression: PARAN_OPEN . expression PARAN_CLOSE
  146 postfix_expression: PARAN_OPEN . type_name PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE
  147                   | PARAN_OPEN . type_name PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    VOID                shift, and go to state 5
    CHAR                shift, and go to state 6
    SHORT               shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    FLOAT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    SIGNED              shift, and go to state 12
    UNSIGNED            shift, and go to state 13
    _BOOL               shift, and go to state 14
    _COMPLEX            shift, and go to state 15
    _IMAGINARY          shift, and go to state 16
    ENUM                shift, and go to state 17
    CONST               shift, and go to state 18
    RESTRICT            shift, and go to state 19
    VOLATILE            shift, and go to state 20
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    type_specifier             go to state 127
    specifier_qualifier_list   go to state 128
    enum_specifier             go to state 29
    type_qualifier             go to state 129
    type_name                  go to state 234
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 132


state 134

  153 unary_expression: INC unary_expression .

    $default  reduce using rule 153 (unary_expression)


state 135

  154 unary_expression: DEC unary_expression .

    $default  reduce using rule 154 (unary_expression)


state 136

  135 primary_expression: PARAN_OPEN . expression PARAN_CLOSE
  146 postfix_expression: PARAN_OPEN . type_name PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE
  147                   | PARAN_OPEN . type_name PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE
  157 unary_expression: SIZEOF PARAN_OPEN . type_name PARAN_CLOSE

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    VOID                shift, and go to state 5
    CHAR                shift, and go to state 6
    SHORT               shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    FLOAT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    SIGNED              shift, and go to state 12
    UNSIGNED            shift, and go to state 13
    _BOOL               shift, and go to state 14
    _COMPLEX            shift, and go to state 15
    _IMAGINARY          shift, and go to state 16
    ENUM                shift, and go to state 17
    CONST               shift, and go to state 18
    RESTRICT            shift, and go to state 19
    VOLATILE            shift, and go to state 20
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    type_specifier             go to state 127
    specifier_qualifier_list   go to state 128
    enum_specifier             go to state 29
    type_qualifier             go to state 129
    type_name                  go to state 235
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 132


state 137

  156 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 156 (unary_expression)


state 138

  141 postfix_expression: postfix_expression PARAN_OPEN . argument_expression_list_opt PARAN_CLOSE

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                       go to state 236
    primary_expression            go to state 92
    constant                      go to state 93
    postfix_expression            go to state 94
    argument_expression_list_opt  go to state 237
    argument_expression_list      go to state 238
    unary_expression              go to state 95
    unary_operator                go to state 96
    cast_expression               go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    conditional_expression        go to state 108
    assignment_expression         go to state 239


state 139

  140 postfix_expression: postfix_expression SQ_OPEN . expression SQ_CLOSE

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 240


state 140

  142 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 241


state 141

  143 postfix_expression: postfix_expression DEREF . IDENTIFIER

    IDENTIFIER  shift, and go to state 242


state 142

  144 postfix_expression: postfix_expression INC .

    $default  reduce using rule 144 (postfix_expression)


state 143

  145 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 145 (postfix_expression)


state 144

  198 assignment_operator: EQUAL .

    $default  reduce using rule 198 (assignment_operator)


state 145

  199 assignment_operator: STAREQUAL .

    $default  reduce using rule 199 (assignment_operator)


state 146

  200 assignment_operator: BYEQUAL .

    $default  reduce using rule 200 (assignment_operator)


state 147

  201 assignment_operator: MODEQUAL .

    $default  reduce using rule 201 (assignment_operator)


state 148

  202 assignment_operator: PLUSEQUAL .

    $default  reduce using rule 202 (assignment_operator)


state 149

  203 assignment_operator: MINUSEQUAL .

    $default  reduce using rule 203 (assignment_operator)


state 150

  204 assignment_operator: SLEQUAL .

    $default  reduce using rule 204 (assignment_operator)


state 151

  205 assignment_operator: SREQUAL .

    $default  reduce using rule 205 (assignment_operator)


state 152

  206 assignment_operator: ANDEQUAL .

    $default  reduce using rule 206 (assignment_operator)


state 153

  207 assignment_operator: CAPEQUAL .

    $default  reduce using rule 207 (assignment_operator)


state 154

  208 assignment_operator: OREQUAL .

    $default  reduce using rule 208 (assignment_operator)


state 155

  197 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 243


state 156

  164 cast_expression: unary_expression .

    $default  reduce using rule 164 (cast_expression)


state 157

  155 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 155 (unary_expression)


state 158

  167 multiplicative_expression: multiplicative_expression STAR . cast_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression  go to state 92
    constant            go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 156
    unary_operator      go to state 96
    cast_expression     go to state 244


state 159

  168 multiplicative_expression: multiplicative_expression BY . cast_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression  go to state 92
    constant            go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 156
    unary_operator      go to state 96
    cast_expression     go to state 245


state 160

  169 multiplicative_expression: multiplicative_expression MOD . cast_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression  go to state 92
    constant            go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 156
    unary_operator      go to state 96
    cast_expression     go to state 246


state 161

  171 additive_expression: additive_expression PLUS . multiplicative_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 247


state 162

  172 additive_expression: additive_expression MINUS . multiplicative_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 248


state 163

  174 shift_expression: shift_expression SL . additive_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 249


state 164

  175 shift_expression: shift_expression SR . additive_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 250


state 165

  177 relational_expression: relational_expression LT . shift_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 251


state 166

  178 relational_expression: relational_expression GT . shift_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 252


state 167

  179 relational_expression: relational_expression LTE . shift_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 253


state 168

  180 relational_expression: relational_expression GTE . shift_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 254


state 169

  182 equality_expression: equality_expression E . relational_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 255


state 170

  183 equality_expression: equality_expression NE . relational_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 256


state 171

  185 and_expression: and_expression AND . equality_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 257


state 172

  187 exclusive_or_expression: exclusive_or_expression CAP . equality_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 258


state 173

  189 inclusive_or_expression: inclusive_or_expression OR . exclusive_or_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 259


state 174

  191 logical_and_expression: logical_and_expression ANDAND . inclusive_or_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 260


state 175

  195 conditional_expression: logical_or_expression Q . expression COLON conditional_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 261


state 176

  193 logical_or_expression: logical_or_expression OROR . logical_and_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 262


state 177

   17 labeled_statement: IDENTIFIER . COLON statement
  132 primary_expression: IDENTIFIER .

    COLON  shift, and go to state 263

    $default  reduce using rule 132 (primary_expression)


state 178

   18 labeled_statement: CASE . constant_expression COLON statement

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 40 (constant_expression)

    constant_expression        go to state 264
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 219


state 179

   19 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 265


state 180

   21 compound_statement: CURLY_OPEN CURLY_CLOSE .

    $default  reduce using rule 21 (compound_statement)


state 181

   29 selection_statement: IF . PARAN_OPEN expression PARAN_CLOSE statement
   30                    | IF . PARAN_OPEN expression PARAN_CLOSE statement ELSE statement

    PARAN_OPEN  shift, and go to state 266


state 182

   31 selection_statement: SWITCH . PARAN_CLOSE expression PARAN_CLOSE statement

    PARAN_CLOSE  shift, and go to state 267


state 183

   34 iteration_statement: FOR . PARAN_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement
   35                    | FOR . PARAN_OPEN declaration SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement

    PARAN_OPEN  shift, and go to state 268


state 184

   32 iteration_statement: WHILE . PARAN_OPEN expression PARAN_CLOSE statement

    PARAN_OPEN  shift, and go to state 269


state 185

   33 iteration_statement: DO . statement WHILE PARAN_OPEN expression PARAN_CLOSE SEMI_COLON

    IDENTIFIER          shift, and go to state 177
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CASE                shift, and go to state 178
    DEFAULT             shift, and go to state 179
    CURLY_OPEN          shift, and go to state 110
    PARAN_OPEN          shift, and go to state 81
    IF                  shift, and go to state 181
    SWITCH              shift, and go to state 182
    FOR                 shift, and go to state 183
    WHILE               shift, and go to state 184
    DO                  shift, and go to state 185
    GOTO                shift, and go to state 186
    CONTINUE            shift, and go to state 187
    BREAK               shift, and go to state 188
    RETURN              shift, and go to state 189
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    statement                  go to state 270
    labeled_statement          go to state 192
    compound_statement         go to state 193
    expression_statement       go to state 196
    expression_opt             go to state 197
    selection_statement        go to state 198
    iteration_statement        go to state 199
    jump_statement             go to state 200
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 186

   36 jump_statement: GOTO . IDENTIFIER SEMI_COLON

    IDENTIFIER  shift, and go to state 271


state 187

   37 jump_statement: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 272


state 188

   38 jump_statement: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 273


state 189

   39 jump_statement: RETURN . expression_opt SEMI_COLON

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    expression_opt             go to state 274
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 190

   27 expression_opt: epsilon .

    $default  reduce using rule 27 (expression_opt)


state 191

   24 block_item: statement .

    $default  reduce using rule 24 (block_item)


state 192

   11 statement: labeled_statement .

    $default  reduce using rule 11 (statement)


state 193

   12 statement: compound_statement .

    $default  reduce using rule 12 (statement)


state 194

   20 compound_statement: CURLY_OPEN block_item_list . CURLY_CLOSE
   23 block_item_list: block_item_list . block_item

    IDENTIFIER          shift, and go to state 177
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CASE                shift, and go to state 178
    DEFAULT             shift, and go to state 179
    CURLY_OPEN          shift, and go to state 110
    CURLY_CLOSE         shift, and go to state 275
    PARAN_OPEN          shift, and go to state 81
    IF                  shift, and go to state 181
    SWITCH              shift, and go to state 182
    FOR                 shift, and go to state 183
    WHILE               shift, and go to state 184
    DO                  shift, and go to state 185
    GOTO                shift, and go to state 186
    CONTINUE            shift, and go to state 187
    BREAK               shift, and go to state 188
    RETURN              shift, and go to state 189
    EXTERN              shift, and go to state 1
    STATIC              shift, and go to state 2
    AUTO                shift, and go to state 3
    REGISTER            shift, and go to state 4
    VOID                shift, and go to state 5
    CHAR                shift, and go to state 6
    SHORT               shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    FLOAT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    SIGNED              shift, and go to state 12
    UNSIGNED            shift, and go to state 13
    _BOOL               shift, and go to state 14
    _COMPLEX            shift, and go to state 15
    _IMAGINARY          shift, and go to state 16
    ENUM                shift, and go to state 17
    CONST               shift, and go to state 18
    RESTRICT            shift, and go to state 19
    VOLATILE            shift, and go to state 20
    INLINE              shift, and go to state 21
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    statement                  go to state 191
    labeled_statement          go to state 192
    compound_statement         go to state 193
    block_item                 go to state 276
    expression_statement       go to state 196
    expression_opt             go to state 197
    selection_statement        go to state 198
    iteration_statement        go to state 199
    jump_statement             go to state 200
    declaration                go to state 201
    declaration_specifiers     go to state 62
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    enum_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 195

   22 block_item_list: block_item .

    $default  reduce using rule 22 (block_item_list)


state 196

   13 statement: expression_statement .

    $default  reduce using rule 13 (statement)


state 197

   26 expression_statement: expression_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 277


state 198

   14 statement: selection_statement .

    $default  reduce using rule 14 (statement)


state 199

   15 statement: iteration_statement .

    $default  reduce using rule 15 (statement)


state 200

   16 statement: jump_statement .

    $default  reduce using rule 16 (statement)


state 201

   25 block_item: declaration .

    $default  reduce using rule 25 (block_item)


state 202

   28 expression_opt: expression .
  210 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 233

    $default  reduce using rule 28 (expression_opt)


state 203

   93 direct_declarator: PARAN_OPEN declarator PARAN_CLOSE .

    $default  reduce using rule 93 (direct_declarator)


state 204

  117 identifier_list: IDENTIFIER .

    $default  reduce using rule 117 (identifier_list)


state 205

  105 identifier_list_opt: epsilon .

    $default  reduce using rule 105 (identifier_list_opt)


state 206

  115 parameter_declaration: declaration_specifiers . declarator
  116                      | declaration_specifiers .

    STAR  shift, and go to state 37

    PARAN_CLOSE  reduce using rule 116 (parameter_declaration)
    COMMA        reduce using rule 116 (parameter_declaration)
    $default     reduce using rule 8 (epsilon)

    epsilon      go to state 72
    declarator   go to state 278
    pointer_opt  go to state 43
    pointer      go to state 44


state 207

   98 direct_declarator: direct_declarator PARAN_OPEN param_or_identi . PARAN_CLOSE

    PARAN_CLOSE  shift, and go to state 279


state 208

  100 param_or_identi: identifier_list_opt .

    $default  reduce using rule 100 (param_or_identi)


state 209

   99 param_or_identi: parameter_type_list .

    $default  reduce using rule 99 (param_or_identi)


state 210

  111 parameter_type_list: parameter_list .
  112                    | parameter_list . COMMA ELIPSIS
  114 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 280

    $default  reduce using rule 111 (parameter_type_list)


state 211

  113 parameter_list: parameter_declaration .

    $default  reduce using rule 113 (parameter_list)


state 212

  106 identifier_list_opt: identifier_list .
  118 identifier_list: identifier_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 281

    $default  reduce using rule 106 (identifier_list_opt)


state 213

   95 direct_declarator: direct_declarator SQ_OPEN STATIC . type_qualifier_list_opt assignment_expression SQ_CLOSE

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 8 (epsilon)

    epsilon                  go to state 52
    type_qualifier           go to state 53
    type_qualifier_list_opt  go to state 282
    type_qualifier_list      go to state 55


state 214

   94 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt . assignment_expression_opt SQ_CLOSE
   97                  | direct_declarator SQ_OPEN type_qualifier_list_opt . STAR SQ_CLOSE

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 283
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 284
    assignment_expression_opt  go to state 285
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 286


state 215

   96 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list . STATIC assignment_expression SQ_CLOSE
  102 type_qualifier_list_opt: type_qualifier_list .
  110 type_qualifier_list: type_qualifier_list . type_qualifier

    STATIC    shift, and go to state 287
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 102 (type_qualifier_list_opt)

    type_qualifier  go to state 71


state 216

   76 enum_specifier: ENUM identifier_opt CURLY_OPEN enumerator_list COMMA CURLY_CLOSE .

    $default  reduce using rule 76 (enum_specifier)


state 217

   81 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 81 (enumerator_list)


state 218

   83 enumerator: enumeration_constant EQUAL constant_expression .

    $default  reduce using rule 83 (enumerator)


state 219

  211 constant_expression: conditional_expression .

    $default  reduce using rule 211 (constant_expression)


state 220

  130 designator: SQ_OPEN constant_expression . SQ_CLOSE

    SQ_CLOSE  shift, and go to state 288


state 221

  131 designator: DOT IDENTIFIER .

    $default  reduce using rule 131 (designator)


state 222

  121 initializer: CURLY_OPEN initializer_list CURLY_CLOSE .

    $default  reduce using rule 121 (initializer)


state 223

  122 initializer: CURLY_OPEN initializer_list COMMA . CURLY_CLOSE
  124 initializer_list: initializer_list COMMA . designation_opt initializer

    CURLY_CLOSE  shift, and go to state 289
    SQ_OPEN      shift, and go to state 119
    DOT          shift, and go to state 120

    $default  reduce using rule 8 (epsilon)

    epsilon          go to state 121
    designation_opt  go to state 290
    designation      go to state 124
    designator_list  go to state 125
    designator       go to state 126


state 224

  123 initializer_list: designation_opt initializer .

    $default  reduce using rule 123 (initializer_list)


state 225

  127 designation: designator_list EQUAL .

    $default  reduce using rule 127 (designation)


state 226

  129 designator_list: designator_list designator .

    $default  reduce using rule 129 (designator_list)


state 227

   73 specifier_qualifier_list_opt: epsilon .

    $default  reduce using rule 73 (specifier_qualifier_list_opt)


state 228

   74 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 74 (specifier_qualifier_list_opt)


state 229

   71 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 71 (specifier_qualifier_list)


state 230

   72 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 72 (specifier_qualifier_list)


state 231

  146 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE . CURLY_OPEN initializer_list CURLY_CLOSE
  147                   | PARAN_OPEN type_name PARAN_CLOSE . CURLY_OPEN initializer_list COMMA CURLY_CLOSE
  165 cast_expression: PARAN_OPEN type_name PARAN_CLOSE . cast_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CURLY_OPEN          shift, and go to state 291
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression  go to state 92
    constant            go to state 93
    postfix_expression  go to state 94
    unary_expression    go to state 156
    unary_operator      go to state 96
    cast_expression     go to state 292


state 232

  135 primary_expression: PARAN_OPEN expression PARAN_CLOSE .

    $default  reduce using rule 135 (primary_expression)


state 233

  210 expression: expression COMMA . assignment_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 293


state 234

  146 postfix_expression: PARAN_OPEN type_name . PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE
  147                   | PARAN_OPEN type_name . PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE

    PARAN_CLOSE  shift, and go to state 294


state 235

  146 postfix_expression: PARAN_OPEN type_name . PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE
  147                   | PARAN_OPEN type_name . PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE
  157 unary_expression: SIZEOF PARAN_OPEN type_name . PARAN_CLOSE

    PARAN_CLOSE  shift, and go to state 295


state 236

  148 argument_expression_list_opt: epsilon .

    $default  reduce using rule 148 (argument_expression_list_opt)


state 237

  141 postfix_expression: postfix_expression PARAN_OPEN argument_expression_list_opt . PARAN_CLOSE

    PARAN_CLOSE  shift, and go to state 296


state 238

  149 argument_expression_list_opt: argument_expression_list .
  151 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 297

    $default  reduce using rule 149 (argument_expression_list_opt)


state 239

  150 argument_expression_list: assignment_expression .

    $default  reduce using rule 150 (argument_expression_list)


state 240

  140 postfix_expression: postfix_expression SQ_OPEN expression . SQ_CLOSE
  210 expression: expression . COMMA assignment_expression

    SQ_CLOSE  shift, and go to state 298
    COMMA     shift, and go to state 233


state 241

  142 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 142 (postfix_expression)


state 242

  143 postfix_expression: postfix_expression DEREF IDENTIFIER .

    $default  reduce using rule 143 (postfix_expression)


state 243

  197 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 197 (assignment_expression)


state 244

  167 multiplicative_expression: multiplicative_expression STAR cast_expression .

    $default  reduce using rule 167 (multiplicative_expression)


state 245

  168 multiplicative_expression: multiplicative_expression BY cast_expression .

    $default  reduce using rule 168 (multiplicative_expression)


state 246

  169 multiplicative_expression: multiplicative_expression MOD cast_expression .

    $default  reduce using rule 169 (multiplicative_expression)


state 247

  167 multiplicative_expression: multiplicative_expression . STAR cast_expression
  168                          | multiplicative_expression . BY cast_expression
  169                          | multiplicative_expression . MOD cast_expression
  171 additive_expression: additive_expression PLUS multiplicative_expression .

    STAR  shift, and go to state 158
    BY    shift, and go to state 159
    MOD   shift, and go to state 160

    $default  reduce using rule 171 (additive_expression)


state 248

  167 multiplicative_expression: multiplicative_expression . STAR cast_expression
  168                          | multiplicative_expression . BY cast_expression
  169                          | multiplicative_expression . MOD cast_expression
  172 additive_expression: additive_expression MINUS multiplicative_expression .

    STAR  shift, and go to state 158
    BY    shift, and go to state 159
    MOD   shift, and go to state 160

    $default  reduce using rule 172 (additive_expression)


state 249

  171 additive_expression: additive_expression . PLUS multiplicative_expression
  172                    | additive_expression . MINUS multiplicative_expression
  174 shift_expression: shift_expression SL additive_expression .

    PLUS   shift, and go to state 161
    MINUS  shift, and go to state 162

    PLUS      [reduce using rule 174 (shift_expression)]
    MINUS     [reduce using rule 174 (shift_expression)]
    $default  reduce using rule 174 (shift_expression)


state 250

  171 additive_expression: additive_expression . PLUS multiplicative_expression
  172                    | additive_expression . MINUS multiplicative_expression
  175 shift_expression: shift_expression SR additive_expression .

    PLUS   shift, and go to state 161
    MINUS  shift, and go to state 162

    PLUS      [reduce using rule 175 (shift_expression)]
    MINUS     [reduce using rule 175 (shift_expression)]
    $default  reduce using rule 175 (shift_expression)


state 251

  174 shift_expression: shift_expression . SL additive_expression
  175                 | shift_expression . SR additive_expression
  177 relational_expression: relational_expression LT shift_expression .

    SL  shift, and go to state 163
    SR  shift, and go to state 164

    $default  reduce using rule 177 (relational_expression)


state 252

  174 shift_expression: shift_expression . SL additive_expression
  175                 | shift_expression . SR additive_expression
  178 relational_expression: relational_expression GT shift_expression .

    SL  shift, and go to state 163
    SR  shift, and go to state 164

    $default  reduce using rule 178 (relational_expression)


state 253

  174 shift_expression: shift_expression . SL additive_expression
  175                 | shift_expression . SR additive_expression
  179 relational_expression: relational_expression LTE shift_expression .

    SL  shift, and go to state 163
    SR  shift, and go to state 164

    $default  reduce using rule 179 (relational_expression)


state 254

  174 shift_expression: shift_expression . SL additive_expression
  175                 | shift_expression . SR additive_expression
  180 relational_expression: relational_expression GTE shift_expression .

    SL  shift, and go to state 163
    SR  shift, and go to state 164

    $default  reduce using rule 180 (relational_expression)


state 255

  177 relational_expression: relational_expression . LT shift_expression
  178                      | relational_expression . GT shift_expression
  179                      | relational_expression . LTE shift_expression
  180                      | relational_expression . GTE shift_expression
  182 equality_expression: equality_expression E relational_expression .

    LT   shift, and go to state 165
    GT   shift, and go to state 166
    LTE  shift, and go to state 167
    GTE  shift, and go to state 168

    $default  reduce using rule 182 (equality_expression)


state 256

  177 relational_expression: relational_expression . LT shift_expression
  178                      | relational_expression . GT shift_expression
  179                      | relational_expression . LTE shift_expression
  180                      | relational_expression . GTE shift_expression
  183 equality_expression: equality_expression NE relational_expression .

    LT   shift, and go to state 165
    GT   shift, and go to state 166
    LTE  shift, and go to state 167
    GTE  shift, and go to state 168

    $default  reduce using rule 183 (equality_expression)


state 257

  182 equality_expression: equality_expression . E relational_expression
  183                    | equality_expression . NE relational_expression
  185 and_expression: and_expression AND equality_expression .

    E   shift, and go to state 169
    NE  shift, and go to state 170

    $default  reduce using rule 185 (and_expression)


state 258

  182 equality_expression: equality_expression . E relational_expression
  183                    | equality_expression . NE relational_expression
  187 exclusive_or_expression: exclusive_or_expression CAP equality_expression .

    E   shift, and go to state 169
    NE  shift, and go to state 170

    $default  reduce using rule 187 (exclusive_or_expression)


state 259

  187 exclusive_or_expression: exclusive_or_expression . CAP equality_expression
  189 inclusive_or_expression: inclusive_or_expression OR exclusive_or_expression .

    CAP  shift, and go to state 172

    $default  reduce using rule 189 (inclusive_or_expression)


state 260

  189 inclusive_or_expression: inclusive_or_expression . OR exclusive_or_expression
  191 logical_and_expression: logical_and_expression ANDAND inclusive_or_expression .

    OR  shift, and go to state 173

    $default  reduce using rule 191 (logical_and_expression)


state 261

  195 conditional_expression: logical_or_expression Q expression . COLON conditional_expression
  210 expression: expression . COMMA assignment_expression

    COLON  shift, and go to state 299
    COMMA  shift, and go to state 233


state 262

  191 logical_and_expression: logical_and_expression . ANDAND inclusive_or_expression
  193 logical_or_expression: logical_or_expression OROR logical_and_expression .

    ANDAND  shift, and go to state 174

    $default  reduce using rule 193 (logical_or_expression)


state 263

   17 labeled_statement: IDENTIFIER COLON . statement

    IDENTIFIER          shift, and go to state 177
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CASE                shift, and go to state 178
    DEFAULT             shift, and go to state 179
    CURLY_OPEN          shift, and go to state 110
    PARAN_OPEN          shift, and go to state 81
    IF                  shift, and go to state 181
    SWITCH              shift, and go to state 182
    FOR                 shift, and go to state 183
    WHILE               shift, and go to state 184
    DO                  shift, and go to state 185
    GOTO                shift, and go to state 186
    CONTINUE            shift, and go to state 187
    BREAK               shift, and go to state 188
    RETURN              shift, and go to state 189
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    statement                  go to state 300
    labeled_statement          go to state 192
    compound_statement         go to state 193
    expression_statement       go to state 196
    expression_opt             go to state 197
    selection_statement        go to state 198
    iteration_statement        go to state 199
    jump_statement             go to state 200
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 264

   18 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 301


state 265

   19 labeled_statement: DEFAULT COLON . statement

    IDENTIFIER          shift, and go to state 177
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CASE                shift, and go to state 178
    DEFAULT             shift, and go to state 179
    CURLY_OPEN          shift, and go to state 110
    PARAN_OPEN          shift, and go to state 81
    IF                  shift, and go to state 181
    SWITCH              shift, and go to state 182
    FOR                 shift, and go to state 183
    WHILE               shift, and go to state 184
    DO                  shift, and go to state 185
    GOTO                shift, and go to state 186
    CONTINUE            shift, and go to state 187
    BREAK               shift, and go to state 188
    RETURN              shift, and go to state 189
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    statement                  go to state 302
    labeled_statement          go to state 192
    compound_statement         go to state 193
    expression_statement       go to state 196
    expression_opt             go to state 197
    selection_statement        go to state 198
    iteration_statement        go to state 199
    jump_statement             go to state 200
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 266

   29 selection_statement: IF PARAN_OPEN . expression PARAN_CLOSE statement
   30                    | IF PARAN_OPEN . expression PARAN_CLOSE statement ELSE statement

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 303


state 267

   31 selection_statement: SWITCH PARAN_CLOSE . expression PARAN_CLOSE statement

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 304


state 268

   34 iteration_statement: FOR PARAN_OPEN . expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement
   35                    | FOR PARAN_OPEN . declaration SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    EXTERN              shift, and go to state 1
    STATIC              shift, and go to state 2
    AUTO                shift, and go to state 3
    REGISTER            shift, and go to state 4
    VOID                shift, and go to state 5
    CHAR                shift, and go to state 6
    SHORT               shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    FLOAT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    SIGNED              shift, and go to state 12
    UNSIGNED            shift, and go to state 13
    _BOOL               shift, and go to state 14
    _COMPLEX            shift, and go to state 15
    _IMAGINARY          shift, and go to state 16
    ENUM                shift, and go to state 17
    CONST               shift, and go to state 18
    RESTRICT            shift, and go to state 19
    VOLATILE            shift, and go to state 20
    INLINE              shift, and go to state 21
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    expression_opt             go to state 305
    declaration                go to state 306
    declaration_specifiers     go to state 62
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    enum_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 269

   32 iteration_statement: WHILE PARAN_OPEN . expression PARAN_CLOSE statement

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 307


state 270

   33 iteration_statement: DO statement . WHILE PARAN_OPEN expression PARAN_CLOSE SEMI_COLON

    WHILE  shift, and go to state 308


state 271

   36 jump_statement: GOTO IDENTIFIER . SEMI_COLON

    SEMI_COLON  shift, and go to state 309


state 272

   37 jump_statement: CONTINUE SEMI_COLON .

    $default  reduce using rule 37 (jump_statement)


state 273

   38 jump_statement: BREAK SEMI_COLON .

    $default  reduce using rule 38 (jump_statement)


state 274

   39 jump_statement: RETURN expression_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 310


state 275

   20 compound_statement: CURLY_OPEN block_item_list CURLY_CLOSE .

    $default  reduce using rule 20 (compound_statement)


state 276

   23 block_item_list: block_item_list block_item .

    $default  reduce using rule 23 (block_item_list)


state 277

   26 expression_statement: expression_opt SEMI_COLON .

    $default  reduce using rule 26 (expression_statement)


state 278

  115 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 115 (parameter_declaration)


state 279

   98 direct_declarator: direct_declarator PARAN_OPEN param_or_identi PARAN_CLOSE .

    $default  reduce using rule 98 (direct_declarator)


state 280

  112 parameter_type_list: parameter_list COMMA . ELIPSIS
  114 parameter_list: parameter_list COMMA . parameter_declaration

    EXTERN      shift, and go to state 1
    STATIC      shift, and go to state 2
    AUTO        shift, and go to state 3
    REGISTER    shift, and go to state 4
    VOID        shift, and go to state 5
    CHAR        shift, and go to state 6
    SHORT       shift, and go to state 7
    INT         shift, and go to state 8
    LONG        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    SIGNED      shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    _BOOL       shift, and go to state 14
    _COMPLEX    shift, and go to state 15
    _IMAGINARY  shift, and go to state 16
    ENUM        shift, and go to state 17
    CONST       shift, and go to state 18
    RESTRICT    shift, and go to state 19
    VOLATILE    shift, and go to state 20
    INLINE      shift, and go to state 21
    ELIPSIS     shift, and go to state 311

    declaration_specifiers   go to state 206
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    parameter_declaration    go to state 312


state 281

  118 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 313


state 282

   95 direct_declarator: direct_declarator SQ_OPEN STATIC type_qualifier_list_opt . assignment_expression SQ_CLOSE

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 314


state 283

   97 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt STAR . SQ_CLOSE
  159 unary_operator: STAR .

    SQ_CLOSE  shift, and go to state 315

    $default  reduce using rule 159 (unary_operator)


state 284

  103 assignment_expression_opt: epsilon .

    $default  reduce using rule 103 (assignment_expression_opt)


state 285

   94 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt assignment_expression_opt . SQ_CLOSE

    SQ_CLOSE  shift, and go to state 316


state 286

  104 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 104 (assignment_expression_opt)


state 287

   96 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list STATIC . assignment_expression SQ_CLOSE

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 317


state 288

  130 designator: SQ_OPEN constant_expression SQ_CLOSE .

    $default  reduce using rule 130 (designator)


state 289

  122 initializer: CURLY_OPEN initializer_list COMMA CURLY_CLOSE .

    $default  reduce using rule 122 (initializer)


state 290

  124 initializer_list: initializer_list COMMA designation_opt . initializer

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CURLY_OPEN          shift, and go to state 80
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    initializer                go to state 318
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 109


state 291

  146 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN . initializer_list CURLY_CLOSE
  147                   | PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN . initializer_list COMMA CURLY_CLOSE

    SQ_OPEN  shift, and go to state 119
    DOT      shift, and go to state 120

    $default  reduce using rule 8 (epsilon)

    epsilon           go to state 121
    initializer_list  go to state 319
    designation_opt   go to state 123
    designation       go to state 124
    designator_list   go to state 125
    designator        go to state 126


state 292

  165 cast_expression: PARAN_OPEN type_name PARAN_CLOSE cast_expression .

    $default  reduce using rule 165 (cast_expression)


state 293

  210 expression: expression COMMA assignment_expression .

    $default  reduce using rule 210 (expression)


state 294

  146 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE . CURLY_OPEN initializer_list CURLY_CLOSE
  147                   | PARAN_OPEN type_name PARAN_CLOSE . CURLY_OPEN initializer_list COMMA CURLY_CLOSE

    CURLY_OPEN  shift, and go to state 291


state 295

  146 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE . CURLY_OPEN initializer_list CURLY_CLOSE
  147                   | PARAN_OPEN type_name PARAN_CLOSE . CURLY_OPEN initializer_list COMMA CURLY_CLOSE
  157 unary_expression: SIZEOF PARAN_OPEN type_name PARAN_CLOSE .

    CURLY_OPEN  shift, and go to state 291

    CURLY_OPEN  [reduce using rule 157 (unary_expression)]
    $default    reduce using rule 157 (unary_expression)


state 296

  141 postfix_expression: postfix_expression PARAN_OPEN argument_expression_list_opt PARAN_CLOSE .

    $default  reduce using rule 141 (postfix_expression)


state 297

  151 argument_expression_list: argument_expression_list COMMA . assignment_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 320


state 298

  140 postfix_expression: postfix_expression SQ_OPEN expression SQ_CLOSE .

    $default  reduce using rule 140 (postfix_expression)


state 299

  195 conditional_expression: logical_or_expression Q expression COLON . conditional_expression

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 156
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 321


state 300

   17 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 17 (labeled_statement)


state 301

   18 labeled_statement: CASE constant_expression COLON . statement

    IDENTIFIER          shift, and go to state 177
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CASE                shift, and go to state 178
    DEFAULT             shift, and go to state 179
    CURLY_OPEN          shift, and go to state 110
    PARAN_OPEN          shift, and go to state 81
    IF                  shift, and go to state 181
    SWITCH              shift, and go to state 182
    FOR                 shift, and go to state 183
    WHILE               shift, and go to state 184
    DO                  shift, and go to state 185
    GOTO                shift, and go to state 186
    CONTINUE            shift, and go to state 187
    BREAK               shift, and go to state 188
    RETURN              shift, and go to state 189
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    statement                  go to state 322
    labeled_statement          go to state 192
    compound_statement         go to state 193
    expression_statement       go to state 196
    expression_opt             go to state 197
    selection_statement        go to state 198
    iteration_statement        go to state 199
    jump_statement             go to state 200
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 302

   19 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 19 (labeled_statement)


state 303

   29 selection_statement: IF PARAN_OPEN expression . PARAN_CLOSE statement
   30                    | IF PARAN_OPEN expression . PARAN_CLOSE statement ELSE statement
  210 expression: expression . COMMA assignment_expression

    PARAN_CLOSE  shift, and go to state 323
    COMMA        shift, and go to state 233


state 304

   31 selection_statement: SWITCH PARAN_CLOSE expression . PARAN_CLOSE statement
  210 expression: expression . COMMA assignment_expression

    PARAN_CLOSE  shift, and go to state 324
    COMMA        shift, and go to state 233


state 305

   34 iteration_statement: FOR PARAN_OPEN expression_opt . SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement

    SEMI_COLON  shift, and go to state 325


state 306

   35 iteration_statement: FOR PARAN_OPEN declaration . SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement

    SEMI_COLON  shift, and go to state 326


state 307

   32 iteration_statement: WHILE PARAN_OPEN expression . PARAN_CLOSE statement
  210 expression: expression . COMMA assignment_expression

    PARAN_CLOSE  shift, and go to state 327
    COMMA        shift, and go to state 233


state 308

   33 iteration_statement: DO statement WHILE . PARAN_OPEN expression PARAN_CLOSE SEMI_COLON

    PARAN_OPEN  shift, and go to state 328


state 309

   36 jump_statement: GOTO IDENTIFIER SEMI_COLON .

    $default  reduce using rule 36 (jump_statement)


state 310

   39 jump_statement: RETURN expression_opt SEMI_COLON .

    $default  reduce using rule 39 (jump_statement)


state 311

  112 parameter_type_list: parameter_list COMMA ELIPSIS .

    $default  reduce using rule 112 (parameter_type_list)


state 312

  114 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 114 (parameter_list)


state 313

  118 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 118 (identifier_list)


state 314

   95 direct_declarator: direct_declarator SQ_OPEN STATIC type_qualifier_list_opt assignment_expression . SQ_CLOSE

    SQ_CLOSE  shift, and go to state 329


state 315

   97 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt STAR SQ_CLOSE .

    $default  reduce using rule 97 (direct_declarator)


state 316

   94 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt assignment_expression_opt SQ_CLOSE .

    $default  reduce using rule 94 (direct_declarator)


state 317

   96 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list STATIC assignment_expression . SQ_CLOSE

    SQ_CLOSE  shift, and go to state 330


state 318

  124 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 124 (initializer_list)


state 319

  124 initializer_list: initializer_list . COMMA designation_opt initializer
  146 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN initializer_list . CURLY_CLOSE
  147                   | PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN initializer_list . COMMA CURLY_CLOSE

    CURLY_CLOSE  shift, and go to state 331
    COMMA        shift, and go to state 332


state 320

  151 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 151 (argument_expression_list)


state 321

  195 conditional_expression: logical_or_expression Q expression COLON conditional_expression .

    $default  reduce using rule 195 (conditional_expression)


state 322

   18 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 18 (labeled_statement)


state 323

   29 selection_statement: IF PARAN_OPEN expression PARAN_CLOSE . statement
   30                    | IF PARAN_OPEN expression PARAN_CLOSE . statement ELSE statement

    IDENTIFIER          shift, and go to state 177
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CASE                shift, and go to state 178
    DEFAULT             shift, and go to state 179
    CURLY_OPEN          shift, and go to state 110
    PARAN_OPEN          shift, and go to state 81
    IF                  shift, and go to state 181
    SWITCH              shift, and go to state 182
    FOR                 shift, and go to state 183
    WHILE               shift, and go to state 184
    DO                  shift, and go to state 185
    GOTO                shift, and go to state 186
    CONTINUE            shift, and go to state 187
    BREAK               shift, and go to state 188
    RETURN              shift, and go to state 189
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    statement                  go to state 333
    labeled_statement          go to state 192
    compound_statement         go to state 193
    expression_statement       go to state 196
    expression_opt             go to state 197
    selection_statement        go to state 198
    iteration_statement        go to state 199
    jump_statement             go to state 200
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 324

   31 selection_statement: SWITCH PARAN_CLOSE expression PARAN_CLOSE . statement

    IDENTIFIER          shift, and go to state 177
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CASE                shift, and go to state 178
    DEFAULT             shift, and go to state 179
    CURLY_OPEN          shift, and go to state 110
    PARAN_OPEN          shift, and go to state 81
    IF                  shift, and go to state 181
    SWITCH              shift, and go to state 182
    FOR                 shift, and go to state 183
    WHILE               shift, and go to state 184
    DO                  shift, and go to state 185
    GOTO                shift, and go to state 186
    CONTINUE            shift, and go to state 187
    BREAK               shift, and go to state 188
    RETURN              shift, and go to state 189
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    statement                  go to state 334
    labeled_statement          go to state 192
    compound_statement         go to state 193
    expression_statement       go to state 196
    expression_opt             go to state 197
    selection_statement        go to state 198
    iteration_statement        go to state 199
    jump_statement             go to state 200
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 325

   34 iteration_statement: FOR PARAN_OPEN expression_opt SEMI_COLON . expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    expression_opt             go to state 335
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 326

   35 iteration_statement: FOR PARAN_OPEN declaration SEMI_COLON . expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    expression_opt             go to state 336
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 327

   32 iteration_statement: WHILE PARAN_OPEN expression PARAN_CLOSE . statement

    IDENTIFIER          shift, and go to state 177
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CASE                shift, and go to state 178
    DEFAULT             shift, and go to state 179
    CURLY_OPEN          shift, and go to state 110
    PARAN_OPEN          shift, and go to state 81
    IF                  shift, and go to state 181
    SWITCH              shift, and go to state 182
    FOR                 shift, and go to state 183
    WHILE               shift, and go to state 184
    DO                  shift, and go to state 185
    GOTO                shift, and go to state 186
    CONTINUE            shift, and go to state 187
    BREAK               shift, and go to state 188
    RETURN              shift, and go to state 189
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    statement                  go to state 337
    labeled_statement          go to state 192
    compound_statement         go to state 193
    expression_statement       go to state 196
    expression_opt             go to state 197
    selection_statement        go to state 198
    iteration_statement        go to state 199
    jump_statement             go to state 200
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 328

   33 iteration_statement: DO statement WHILE PARAN_OPEN . expression PARAN_CLOSE SEMI_COLON

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 338


state 329

   95 direct_declarator: direct_declarator SQ_OPEN STATIC type_qualifier_list_opt assignment_expression SQ_CLOSE .

    $default  reduce using rule 95 (direct_declarator)


state 330

   96 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list STATIC assignment_expression SQ_CLOSE .

    $default  reduce using rule 96 (direct_declarator)


state 331

  146 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN initializer_list CURLY_CLOSE .

    $default  reduce using rule 146 (postfix_expression)


state 332

  124 initializer_list: initializer_list COMMA . designation_opt initializer
  147 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN initializer_list COMMA . CURLY_CLOSE

    CURLY_CLOSE  shift, and go to state 339
    SQ_OPEN      shift, and go to state 119
    DOT          shift, and go to state 120

    $default  reduce using rule 8 (epsilon)

    epsilon          go to state 121
    designation_opt  go to state 290
    designation      go to state 124
    designator_list  go to state 125
    designator       go to state 126


state 333

   29 selection_statement: IF PARAN_OPEN expression PARAN_CLOSE statement .
   30                    | IF PARAN_OPEN expression PARAN_CLOSE statement . ELSE statement

    ELSE  shift, and go to state 340

    $default  reduce using rule 29 (selection_statement)


state 334

   31 selection_statement: SWITCH PARAN_CLOSE expression PARAN_CLOSE statement .

    $default  reduce using rule 31 (selection_statement)


state 335

   34 iteration_statement: FOR PARAN_OPEN expression_opt SEMI_COLON expression_opt . SEMI_COLON expression_opt PARAN_CLOSE statement

    SEMI_COLON  shift, and go to state 341


state 336

   35 iteration_statement: FOR PARAN_OPEN declaration SEMI_COLON expression_opt . SEMI_COLON expression_opt PARAN_CLOSE statement

    SEMI_COLON  shift, and go to state 342


state 337

   32 iteration_statement: WHILE PARAN_OPEN expression PARAN_CLOSE statement .

    $default  reduce using rule 32 (iteration_statement)


state 338

   33 iteration_statement: DO statement WHILE PARAN_OPEN expression . PARAN_CLOSE SEMI_COLON
  210 expression: expression . COMMA assignment_expression

    PARAN_CLOSE  shift, and go to state 343
    COMMA        shift, and go to state 233


state 339

  147 postfix_expression: PARAN_OPEN type_name PARAN_CLOSE CURLY_OPEN initializer_list COMMA CURLY_CLOSE .

    $default  reduce using rule 147 (postfix_expression)


state 340

   30 selection_statement: IF PARAN_OPEN expression PARAN_CLOSE statement ELSE . statement

    IDENTIFIER          shift, and go to state 177
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CASE                shift, and go to state 178
    DEFAULT             shift, and go to state 179
    CURLY_OPEN          shift, and go to state 110
    PARAN_OPEN          shift, and go to state 81
    IF                  shift, and go to state 181
    SWITCH              shift, and go to state 182
    FOR                 shift, and go to state 183
    WHILE               shift, and go to state 184
    DO                  shift, and go to state 185
    GOTO                shift, and go to state 186
    CONTINUE            shift, and go to state 187
    BREAK               shift, and go to state 188
    RETURN              shift, and go to state 189
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    statement                  go to state 344
    labeled_statement          go to state 192
    compound_statement         go to state 193
    expression_statement       go to state 196
    expression_opt             go to state 197
    selection_statement        go to state 198
    iteration_statement        go to state 199
    jump_statement             go to state 200
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 341

   34 iteration_statement: FOR PARAN_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON . expression_opt PARAN_CLOSE statement

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    expression_opt             go to state 345
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 342

   35 iteration_statement: FOR PARAN_OPEN declaration SEMI_COLON expression_opt SEMI_COLON . expression_opt PARAN_CLOSE statement

    IDENTIFIER          shift, and go to state 75
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    PARAN_OPEN          shift, and go to state 81
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    expression_opt             go to state 346
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 343

   33 iteration_statement: DO statement WHILE PARAN_OPEN expression PARAN_CLOSE . SEMI_COLON

    SEMI_COLON  shift, and go to state 347


state 344

   30 selection_statement: IF PARAN_OPEN expression PARAN_CLOSE statement ELSE statement .

    $default  reduce using rule 30 (selection_statement)


state 345

   34 iteration_statement: FOR PARAN_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt . PARAN_CLOSE statement

    PARAN_CLOSE  shift, and go to state 348


state 346

   35 iteration_statement: FOR PARAN_OPEN declaration SEMI_COLON expression_opt SEMI_COLON expression_opt . PARAN_CLOSE statement

    PARAN_CLOSE  shift, and go to state 349


state 347

   33 iteration_statement: DO statement WHILE PARAN_OPEN expression PARAN_CLOSE SEMI_COLON .

    $default  reduce using rule 33 (iteration_statement)


state 348

   34 iteration_statement: FOR PARAN_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE . statement

    IDENTIFIER          shift, and go to state 177
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CASE                shift, and go to state 178
    DEFAULT             shift, and go to state 179
    CURLY_OPEN          shift, and go to state 110
    PARAN_OPEN          shift, and go to state 81
    IF                  shift, and go to state 181
    SWITCH              shift, and go to state 182
    FOR                 shift, and go to state 183
    WHILE               shift, and go to state 184
    DO                  shift, and go to state 185
    GOTO                shift, and go to state 186
    CONTINUE            shift, and go to state 187
    BREAK               shift, and go to state 188
    RETURN              shift, and go to state 189
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    statement                  go to state 350
    labeled_statement          go to state 192
    compound_statement         go to state 193
    expression_statement       go to state 196
    expression_opt             go to state 197
    selection_statement        go to state 198
    iteration_statement        go to state 199
    jump_statement             go to state 200
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 349

   35 iteration_statement: FOR PARAN_OPEN declaration SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE . statement

    IDENTIFIER          shift, and go to state 177
    INTEGER_CONSTANT    shift, and go to state 76
    FLOATING_CONSTANT   shift, and go to state 77
    CHARACTER_CONSTANT  shift, and go to state 78
    STRING_LITERAL      shift, and go to state 79
    CASE                shift, and go to state 178
    DEFAULT             shift, and go to state 179
    CURLY_OPEN          shift, and go to state 110
    PARAN_OPEN          shift, and go to state 81
    IF                  shift, and go to state 181
    SWITCH              shift, and go to state 182
    FOR                 shift, and go to state 183
    WHILE               shift, and go to state 184
    DO                  shift, and go to state 185
    GOTO                shift, and go to state 186
    CONTINUE            shift, and go to state 187
    BREAK               shift, and go to state 188
    RETURN              shift, and go to state 189
    STAR                shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    SIZEOF              shift, and go to state 85
    PLUS                shift, and go to state 86
    MINUS               shift, and go to state 87
    TILDE               shift, and go to state 88
    EX                  shift, and go to state 89
    AND                 shift, and go to state 90

    $default  reduce using rule 8 (epsilon)

    epsilon                    go to state 190
    statement                  go to state 351
    labeled_statement          go to state 192
    compound_statement         go to state 193
    expression_statement       go to state 196
    expression_opt             go to state 197
    selection_statement        go to state 198
    iteration_statement        go to state 199
    jump_statement             go to state 200
    primary_expression         go to state 92
    constant                   go to state 93
    postfix_expression         go to state 94
    unary_expression           go to state 95
    unary_operator             go to state 96
    cast_expression            go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    conditional_expression     go to state 108
    assignment_expression      go to state 131
    expression                 go to state 202


state 350

   34 iteration_statement: FOR PARAN_OPEN expression_opt SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement .

    $default  reduce using rule 34 (iteration_statement)


state 351

   35 iteration_statement: FOR PARAN_OPEN declaration SEMI_COLON expression_opt SEMI_COLON expression_opt PARAN_CLOSE statement .

    $default  reduce using rule 35 (iteration_statement)
